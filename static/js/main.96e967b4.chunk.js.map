{"version":3,"sources":["main/components/Profile/profile.module.scss","main/components/ResetPassword/resetPassword.module.scss","main/components/CreateNewPassword/createNewPassword.module.scss","main/components/CardsList/cardsList.module.scss","main/components/PacksList/PacksTable/packTable.module.scss","store/actions/packsReducerActions.ts","reportWebVitals.ts","main/components/common/Error404/Error404.tsx","main/api/api.ts","main/constants/forgotPasswordMessage.ts","store/reducers/registrationReducer.ts","main/components/Registration/Registration.tsx","main/components/common/SuperButton/SuperButton.tsx","store/selectors/selectOperationStatus.ts","store/selectors/selectErrorMessage.ts","store/selectors/selectIsLoggedIn.ts","store/selectors/selectIsInit.ts","store/selectors/selectProfileData.ts","store/selectors/selectPacks.ts","store/selectors/selectUserId.ts","store/selectors/selectSearchPackName.ts","store/selectors/selectSortPacks.ts","store/selectors/selectCardsTotalCount.ts","store/selectors/selectCardsPage.ts","store/selectors/selectCardsPageCount.ts","store/selectors/selectSortCards.ts","main/hooks/useTypedDispatch.ts","main/components/common/SuperInputText/SuperInputText.tsx","main/enum/index.ts","main/components/common/Search/Search.tsx","store/actions/appReducerActions.ts","main/hooks/useDebounce.ts","main/components/PacksList/PacksTable/PackTableHeader.tsx","store/actions/profileReducerActions.ts","store/reducers/packsReducer.ts","main/components/common/TableItem/TableItem.tsx","store/selectors/selectPagePacksReducer.ts","store/selectors/selectCardPacksTotalCountPacksReducer.ts","store/selectors/selectPageCountPacksReducer.ts","main/constants/countOfPacksOnPage.ts","main/components/PacksList/PacksTable/PacksTable.tsx","main/components/Profile/ProfileInfo/ProfileInfo.tsx","store/actions/cardsReducerActions.ts","store/reducers/profileReducer.ts","main/components/common/Preloader/Preloader.tsx","main/components/Profile/PersonalInformation/PersonalInformation.tsx","store/selectors/selectMinPacksReducer.ts","store/selectors/selectMaxPacksReducer.ts","main/components/Profile/Profile.tsx","store/reducers/loginReducer.ts","main/components/ResetPassword/ResetPassword.tsx","main/components/CreateNewPassword/CreateNewPassword.tsx","main/components/common/SuperCheckbox/SuperCheckbox.tsx","main/components/LogIn/LogIn.tsx","main/components/common/SuperDoubleRange/SuperDoubleRange.tsx","main/components/PacksList/Sidebar/Sidebar.tsx","main/components/PacksList/PacksList.tsx","main/components/Routes/Router.tsx","store/reducers/cardsReducer.ts","store/selectors/selectCards.ts","main/components/CardsList/CardsTable/CardsTableHeader.tsx","main/components/CardsList/CardsTable/CardsTable.tsx","main/components/CardsList/CardsList.tsx","main/components/Routes/RouterWithoutLogin.tsx","main/components/Header/Header.tsx","store/reducers/appReducer.ts","main/components/App.tsx","store/store.ts","index.tsx","main/components/CardsList/CardsTable/cardsTable.module.scss","main/components/common/TableItem/tableItem.module.scss","main/components/Profile/ProfileInfo/profileInfo.module.scss","main/components/Header/header.module.scss","main/components/PacksList/packList.module.scss","main/components/Profile/PersonalInformation/personalInformation.module.scss","main/components/common/SuperInputText/SuperInputText.module.css","main/components/common/SuperCheckbox/SuperCheckbox.module.css","main/components/LogIn/LogIn.module.css","main/components/common/SuperButton/SuperButton.module.css","main/components/common/Search/search.module.scss","main/components/common/Preloader/preloader.module.css"],"names":["module","exports","PACK_ACTIONS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","instance","axios","create","withCredentials","baseURL","userAPI","post","profile","put","email","password","rememberMe","response","data","delete","from","message","resetPasswordToken","registrationAPI","packAPI","queryParams","get","params","pack","cardsPack","id","cardsApi","initState","Registration","dispatch","useDispatch","useState","setEmail","setPassword","confirmPassword","setConfirmPassword","style","display","flexDirection","width","margin","type","placeholder","onChange","e","currentTarget","value","onClick","registrationThunk","SuperButton","memo","red","className","restProps","finalClassName","s","default","selectOperationStatus","state","app","status","selectErrorMessage","errorMessage","selectIsLoggedIn","isLoggedIn","selectIsInit","isInitialized","selectProfileData","selectPacks","packs","cardPacks","selectUserId","_id","selectSearchPackName","packName","selectSortPacks","sortPacks","selectCardsTotalCount","cards","cardsTotalCount","selectCardsPage","page","selectCardsPageCount","pageCount","selectSortCards","sortCards","useTypedDispatch","SuperInputText","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","input","key","Path","Sort","setPacks","SET_PACKS","payload","setSortPacks","SET_SORT_PUCKS","setModeIsMyPack","isMyPack","SET_IS_MY_PACK","APP_ACTIONS","Search","location","inputValue","setInputValue","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","Packs","SET_PACK_NAME","searchContainer","autoComplete","searchInput","PackTableHeader","useSelector","classSortName","useCallback","fieldName","arrowUp","arrowDown","handleSort","headerTableContainer","name","tableHeaderItem","cardsCount","lastUpdated","tableHeaderButton","PROFILE_ACTIONS","setIsLoggedIn","SET_IS_LOGGED_IN","setErrorMessage","SET_ERROR_MESSAGE","setOperationStatus","CHANGE_OPERATION_STATUS","created","updated","user_id","private","user_name","cardPacksTotalCount","maxCardsCount","minCardsCount","min","max","getPacks","getState","a","TableItem","card","navigate","useNavigate","pathname","useLocation","handleDeleteClick","handleNameClick","itemsPacksBlock","tableItemName","tableItem","slice","PacksList","itemsCardsBlock","question","answer","Rating","size","grade","readOnly","selectPagePacksReducer","selectCardPacksTotalCountPacksReducer","selectPageCountPacksReducer","countOfPacksOnPage","PacksTable","operationStatus","count","Math","ceil","tableContainer","progress","CircularProgress","itemsWrapper","map","p","paginationAndSelect","Stack","spacing","Pagination","variant","shape","event","SET_PAGE_OF_PACKS","setPageOfPacks","selectBlock","selectName","SET_PAGE_COUNT","setPageCount","target","select","c","index","ProfileInfo","changeProfileEditingStatus","handleChangeProfileEditingStatus","handleAddPackClick","container","info_block","inner_info_top","alt","src","avatar","ava","blockButtons","inner_info_bottom","CARD_ACTIONS","setUserData","SET_USER_DATA","modifyProfile","changes","UPDATE_PROFILE","publicCardPacksCount","Date","isAdmin","verified","Preloader","height","styles","loader","PersonalInformation","nickname","setNickname","setAvatar","handlerOnclickCancel","handlerOnclickSave","updatedUser","disableButton","title","input_container","button_container","disabled","selectMinPacksReducer","selectMaxPacksReducer","Profile","profileEditingStatus","setProfileEditingStatus","isLogin","ResetPassword","handleButtonClick","forgotPassword","CreateNewPassword","newPassword","setNewPassword","token","useParams","handleSendNewPassword","sendNewPassword","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","LogIn","setChecked","onFocusEmailAndPasswordInput","preloader","login","onFocus","getLoginAC","catch","err","finally","getLoginUserData","textDecoration","color","to","SuperDoubleRange","onChangeRange","handles","cursor","marginTop","borderRadius","border","backgroundColor","newValue","allowCross","trackStyle","left","handleStyle","railStyle","Sidebar","rangeValues","setRangeValues","debouncedRange","useMemo","debounce","values","SET_RANGE_CARDS","setRangeCards","sidebar","doubleRange","minMaxRange","setCards","SET_CARDS","setSortCards","SET_SORT_CARDS","cardsPack_id","shots","maxGrade","minGrade","packUserId","cardAnswer","cardQuestion","selectCards","CardsTableHeader","CardsTable","navigateToPacksList","useLayoutEffect","backArrow","ArrowBack","Box","sx","SET_PAGE_OF_CARDS","setPageOfCards","CardsList","Router","path","element","CreatePassword","navbarItems","icon","Person","Style","NavbarItem","item","navData","isActive","active","Header","handleLogoutClick","nav","logout_button","RouterWithoutLogin","App","SET_INITIALIZATION","rootReducers","combineReducers","action","logIn","registration","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96e967b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__3a7Ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"resetPassword_container__2-qJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"createNewPassword_container__3Av71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cardsList_container__2obtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"packTable_tableContainer__23gRk\",\"progress\":\"packTable_progress__2tq2m\",\"paginationAndSelect\":\"packTable_paginationAndSelect__iEg4r\",\"selectBlock\":\"packTable_selectBlock__3uIpD\",\"selectName\":\"packTable_selectName__qIqyz\",\"select\":\"packTable_select__3J76z\",\"headerTableContainer\":\"packTable_headerTableContainer__3IscH\",\"tableHeaderItem\":\"packTable_tableHeaderItem__3USqs\",\"arrowUp\":\"packTable_arrowUp__3NdPL\",\"arrowDown\":\"packTable_arrowDown__3YgMh\",\"tableHeaderButton\":\"packTable_tableHeaderButton__2PJHl\",\"itemsWrapper\":\"packTable_itemsWrapper__jNp8k\"};","import {PacksResponseType} from '../../main/api/types';\r\n\r\n\r\nexport enum PACK_ACTIONS {\r\n    SET_PACKS = 'Packs/SET-PACKS',\r\n    SET_SORT_PUCKS = 'Packs/SET-SORT-PACKS',\r\n    SET_PACK_NAME = 'Packs/SET-PACK-NAME',\r\n    SET_RANGE_CARDS = 'Packs/SET-RANGE-CARDS',\r\n    SET_PAGE_OF_PACKS = 'Packs/SET-PAGE-OF-PACKS',\r\n    SET_IS_MY_PACK = 'Packs/SET-IS-MY-PACK',\r\n    SET_PAGE_COUNT = 'Packs/SET-PAGE-COUNT',\r\n}\r\n\r\nexport type PacksReducerActionsType =\r\n    | ReturnType<typeof setPacks>\r\n    | ReturnType<typeof setSortPacks>\r\n    | ReturnType<typeof setItemNameSort>\r\n    | ReturnType<typeof setPackName>\r\n    | ReturnType<typeof setRangeCards>\r\n    | ReturnType<typeof setPageOfPacks>\r\n    | ReturnType<typeof setPageCount>\r\n    | ReturnType<typeof setModeIsMyPack>\r\n\r\nexport const setPacks = (packs: PacksResponseType) =>\r\n    ({type: PACK_ACTIONS.SET_PACKS, payload: packs})\r\n\r\nexport const setItemNameSort = (itemNameSort: '0name' | '1name') =>\r\n    ({type: PACK_ACTIONS.SET_SORT_PUCKS, payload: {sort: {itemNameSort}}} as const)\r\n\r\nexport const setSortPacks = (sortPacks: string) =>\r\n    ({type: PACK_ACTIONS.SET_SORT_PUCKS, payload: {sortPacks}} as const)\r\n\r\nexport const setPackName = (packName: string) =>\r\n    ({type: PACK_ACTIONS.SET_PACK_NAME, payload: {packName}} as const)\r\n\r\nexport const setRangeCards = (values: number[]) =>\r\n    ({type: PACK_ACTIONS.SET_RANGE_CARDS, payload: {min : values[0], max : values[1]}} as const)\r\n\r\nexport const setPageOfPacks = (page: number) =>\r\n    ({type: PACK_ACTIONS.SET_PAGE_OF_PACKS, payload: {page}} as const)\r\n\r\nexport const setModeIsMyPack = (isMyPack: boolean) =>\r\n    ({type: PACK_ACTIONS.SET_IS_MY_PACK, payload: {isMyPack}} as const)\r\n\r\nexport const setPageCount = (pageCount: number) =>\r\n    ({type: PACK_ACTIONS.SET_PAGE_COUNT, payload: {pageCount}} as const)\r\n\r\n\r\n\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nexport const Error404 = () => {\r\n  return <div>Error 404</div>;\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n    CardsResponseType, NewCardType,\r\n    NewPackType,\r\n    PacksResponseType,\r\n    ProfileResponseType,\r\n    QueryCardsParamsType,\r\n    QueryPackParamsType, UpdateCardType, UpdatePackType\r\n} from \"./types\";\r\nimport {forgotPasswordMessage} from \"../constants/forgotPasswordMessage\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\" //process.env.REACT_APP_BACK_URL || 'http://localhost:7542/2.0/',\r\n})\r\n\r\nexport const userAPI = {\r\n    me() {\r\n        return instance.post<ProfileResponseType>(`/auth/me`, {})\r\n\r\n    },\r\n    updateProfile(profile: Partial<ProfileResponseType>) {\r\n        return instance.put<{ updatedUser: { name: string, avatar: string } }>(`/auth/me`, profile)\r\n\r\n    },\r\n    logIn(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ProfileResponseType>('auth/login', {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<{ info: string, error: string; }>(`/auth/me`, {})\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<{ info: string, error: string; }>(`/auth/forgot`, {\r\n            email,\r\n            from: \"test-front-admin <yatsevich-artsiom@yandex.by>\",\r\n            message: forgotPasswordMessage,\r\n        })\r\n    },\r\n    newPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<{ info: string, error: string; }>(\r\n            `/auth/set-new-password`,\r\n            {password, resetPasswordToken})\r\n    },\r\n}\r\n\r\nexport const registrationAPI = {\r\n    registration(email: string, password: string) {\r\n        return instance.post('/auth/register', {email, password})\r\n    }\r\n}\r\n\r\nexport const packAPI = {\r\n    getPacks(queryParams?: Partial<QueryPackParamsType>) {\r\n        return instance.get<PacksResponseType>(`/cards/pack`, {params: queryParams})\r\n    },\r\n    addPack(pack: NewPackType) {\r\n        return instance.post<{}>(`/cards/pack`, {cardsPack: pack})\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete<{}>(`/cards/pack`, {params: {id}})\r\n    },\r\n    updatePack(update: UpdatePackType) {\r\n        return instance.put<{}>(`/cards/pack`,{update})\r\n    },\r\n}\r\n\r\nexport const cardsApi = {\r\n    getCards(queryParams: Partial<QueryCardsParamsType>) {\r\n        return instance.get<CardsResponseType>(`/cards/card`, {params: queryParams})\r\n    },\r\n    addCard(card: Partial<NewCardType>) {\r\n        return instance.post<{}>(`/cards/card`, {card})\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete<{}>(`/cards/card`, {params: {id}})\r\n    },\r\n    updatePack(update: UpdateCardType) {\r\n        return instance.put<{}>(`/cards/card`,{update})\r\n    },\r\n}\r\n","export const forgotPasswordMessage = `<div style='background-color:lime;padding:15px'><a href='https://defreezz.github.io/cards/#/createNewPassword/$token$'>Password recovery link</a></div>`","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../main/api/api\";\r\n\r\nexport type RegistrationStateType = {}\r\n\r\nconst initState:RegistrationStateType = {};\r\n\r\nexport const registrationReducer = (state = initState,action: RegistrationActionType): RegistrationStateType => {\r\n    switch (action.type) {\r\n        case \"REG-FORM\":\r\n            return {...state}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport type RegistrationActionType = ReturnType<typeof registrationAC>\r\n\r\nexport const registrationAC = () => {\r\n    return {\r\n        type: 'REG-FORM'\r\n    } as const\r\n}\r\n\r\n\r\nexport const registrationThunk = (email: string, password:string) => (dispatch: Dispatch) => {\r\n    registrationAPI.registration(email,password)\r\n        .then(() => {\r\n            dispatch(registrationAC())\r\n        })\r\n}","import React, {useState} from \"react\";\r\nimport {registrationThunk} from \"../../../store/reducers/registrationReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const Registration = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password,setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword]  = useState(\"\")\r\n\r\n\r\n  const onSubmitRegistr = () => {\r\n    if (password === confirmPassword) {\r\n      dispatch(registrationThunk(email,password))\r\n    }\r\n  }\r\n\r\n\r\n  return <div>\r\n\r\n    <div style={{display: 'flex',flexDirection: 'column', width: '400px', margin: '0 auto'}}>\r\n      <h1>Registration</h1>\r\n      <input type=\"text\" placeholder='E-mail' onChange={e => setEmail(e.currentTarget.value)}/>\r\n      <input type=\"password\" placeholder='Password' onChange={e => setPassword(e.currentTarget.value)}/>\r\n      <input type=\"password\" placeholder='ConfirmPassword' onChange={e => setConfirmPassword(e.currentTarget.value)}/>\r\n      <button onClick={onSubmitRegistr}>Registration</button>\r\n    </div>\r\n  </div>;\r\n};\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, memo} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = memo(({\r\n                                                         red,\r\n                                                         className,\r\n                                                         ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n                                                     }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n})\r\n\r\nexport default SuperButton\r\n","import {AppStoreType} from \"../store\";\r\nimport {PendingStatusType} from \"../reducers/appReducer\";\r\n\r\nexport const selectOperationStatus = (state:AppStoreType):PendingStatusType => state.app.status","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectErrorMessage = (state:AppStoreType):string|null => state.app.errorMessage","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectIsLoggedIn = (state:AppStoreType):boolean => state.app.isLoggedIn","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectIsInit = (state:AppStoreType):boolean => state.app.isInitialized","import {AppStoreType} from \"../store\";\r\nimport {ProfileReducerType} from \"../reducers/profileReducer\";\r\n\r\nexport const selectProfileData = (state:AppStoreType):ProfileReducerType => state.profile","import {AppStoreType} from \"../store\";\r\nimport {PackType} from \"../../main/api/types\";\r\n\r\nexport const selectPacks = (state:AppStoreType):PackType[] => state.packs.cardPacks","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectUserId = (state:AppStoreType) => state.profile._id","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectSearchPackName = (state:AppStoreType):string => state.packs.packName","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectSortPacks = (state:AppStoreType):string => state.packs.sortPacks","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectCardsTotalCount = (state:AppStoreType):number => state.cards.cardsTotalCount","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectCardsPage = (state:AppStoreType):number => state.cards.page","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectCardsPageCount = (state:AppStoreType):number => state.cards.pageCount","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectSortCards = (state:AppStoreType):string => state.cards.sortCards","import {useDispatch} from \"react-redux\";\r\nimport {Dispatch} from \"react\";\r\nimport {AllActionsType, ThunkType} from \"../../store/store\";\r\n\r\nexport const useTypedDispatch = () => {\r\n    return useDispatch<Dispatch<ThunkType|AllActionsType>>()\r\n\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, memo} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = memo ((\r\n    {\r\n        //type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput: s.superInput} ${className? className: s.input}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default SuperInputText\r\n","export enum Path {\r\n    Packs = '/packs-list',\r\n    Cards = '/cards-list',\r\n}\r\n\r\nexport enum Sort {\r\n    name = 'name',\r\n    cardsCount = 'cardsCount',\r\n    lastUpdated = 'updated',\r\n    id = 'user_id',\r\n}","import {memo, useEffect, useState} from 'react';\r\nimport style from './search.module.scss';\r\nimport {useTypedDispatch} from '../../../utils';\r\nimport SuperInputText from '../SuperInputText/SuperInputText';\r\nimport {setPackName} from \"../../../../store/actions/packsReducerActions\";\r\nimport {useDebounce} from \"../../../hooks/useDebounce\";\r\nimport {Path} from \"../../../enum\";\r\n\r\ntype SearchType = {\r\n    location: '/packs-list'|'/cards-list',\r\n}\r\n\r\n\r\nexport const Search = memo(({location}: SearchType) => {\r\n    const dispatch = useTypedDispatch();\r\n    const [inputValue, setInputValue] = useState('')\r\n    const value = useDebounce(inputValue)\r\n\r\n    useEffect(() => {\r\n        if (location === Path.Packs)\r\n            dispatch(setPackName(value))\r\n        //else\r\n            //dispatch(setCardName(value))\r\n    }, [dispatch,location, value])\r\n\r\n\r\n    return (\r\n        <div className={style.searchContainer}>\r\n            <SuperInputText\r\n                autoComplete={'off'}\r\n                className={style.searchInput}\r\n                value={inputValue}\r\n                onChangeText={setInputValue}\r\n                placeholder={\"Search pack by name\"}\r\n            />\r\n        </div>\r\n    );\r\n});","import {PendingStatusType} from \"../reducers/appReducer\";\r\n\r\nexport enum APP_ACTIONS {\r\n    SET_IS_LOGGED_IN = 'Auth/SET-IS-LOGGED-IN',\r\n    SET_ERROR_MESSAGE ='App/SET-ERROR-MESSAGE',\r\n    CHANGE_OPERATION_STATUS ='App/CHANGE-OPERATION-STATUS',\r\n    SET_INITIALIZATION = 'App/SET-INITIALIZATION',\r\n}\r\nexport type AppReducerActionsType =\r\n    | SetIsLoggedIn\r\n    | SetErrorMessage\r\n    | ChangeOperationStatus\r\n    | SetInitialization\r\n\r\ntype SetIsLoggedIn = {\r\n    type: APP_ACTIONS.SET_IS_LOGGED_IN\r\n    payload:{isLoggedIn:boolean}\r\n}\r\ntype SetErrorMessage = {\r\n    type: APP_ACTIONS.SET_ERROR_MESSAGE\r\n    payload:{errorMessage:string|null}\r\n}\r\ntype ChangeOperationStatus = {\r\n    type: APP_ACTIONS.CHANGE_OPERATION_STATUS\r\n    payload:{status:PendingStatusType}\r\n}\r\ntype SetInitialization = {\r\n    type: APP_ACTIONS.SET_INITIALIZATION\r\n    payload:{isInitialized:boolean}\r\n}\r\n\r\nexport const setIsLoggedIn = (isLoggedIn: boolean):SetIsLoggedIn =>\r\n    ({type:APP_ACTIONS.SET_IS_LOGGED_IN, payload:{isLoggedIn}});\r\n\r\nexport const setErrorMessage = (errorMessage: string | null):SetErrorMessage =>\r\n    ({type: APP_ACTIONS.SET_ERROR_MESSAGE, payload:{errorMessage}});\r\n\r\nexport const setOperationStatus = (status: PendingStatusType):ChangeOperationStatus =>\r\n    ({type: APP_ACTIONS.CHANGE_OPERATION_STATUS, payload:{status}});\r\n\r\nexport const setInitialization = (isInitialized: boolean):SetInitialization =>\r\n    ({type: APP_ACTIONS.SET_INITIALIZATION, payload:{isInitialized}});","\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useDebounce = (value: any) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setDebouncedValue(value)\r\n        }, 500)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [value])\r\n\r\n    return debouncedValue\r\n};","import style from './packTable.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectSortPacks} from \"../../../../store/selectors\";\r\nimport {setSortPacks} from \"../../../../store/actions/packsReducerActions\";\r\nimport {useTypedDispatch} from \"../../../hooks/useTypedDispatch\";\r\nimport {Sort} from \"../../../enum\";\r\nimport {useCallback} from \"react\";\r\n\r\nexport const PackTableHeader = () => {\r\n    const dispatch = useTypedDispatch()\r\n    const sortPacks = useSelector(selectSortPacks)\r\n\r\n    const classSortName = useCallback ((fieldName: string) => {\r\n        if (sortPacks === `0${fieldName}`)\r\n            return style.arrowUp\r\n        else if (sortPacks === `1${fieldName}`)\r\n            return style.arrowDown\r\n        else return ''\r\n    },[sortPacks])\r\n\r\n    const handleSort = useCallback((fieldName: string) => () => {\r\n        if (sortPacks !== `1${fieldName}`)\r\n            dispatch(setSortPacks(`1${fieldName}`))\r\n        else\r\n            dispatch(setSortPacks(`0${fieldName}`))\r\n\r\n    },[dispatch,sortPacks])\r\n    return (\r\n        <div className={style.headerTableContainer}>\r\n            <div onClick={handleSort(Sort.name)}\r\n                 className={style.tableHeaderItem}>\r\n                Name\r\n                <div className={classSortName(Sort.name)}/>\r\n            </div>\r\n            <div onClick={handleSort(Sort.cardsCount)}\r\n                 className={style.tableHeaderItem}>\r\n                Cards\r\n                <div className={classSortName(Sort.cardsCount)}/>\r\n            </div>\r\n            <div\r\n                onClick={handleSort(Sort.lastUpdated)}\r\n                className={style.tableHeaderItem}\r\n            >\r\n                Last Updated\r\n                <div className={classSortName(Sort.lastUpdated)}/>\r\n            </div>\r\n            <div\r\n                onClick={handleSort(Sort.id)}\r\n                className={style.tableHeaderItem}\r\n            >\r\n                Created By\r\n                <div className={classSortName(Sort.id)}/>\r\n            </div>\r\n            <div\r\n                className={style.tableHeaderButton}>Actions\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {ProfileReducerType} from \"../reducers/profileReducer\";\r\n\r\nexport enum PROFILE_ACTIONS {\r\n    UPDATE_PROFILE = 'profile/UPDATE-PROFILE',\r\n    SET_USER_DATA = 'profile/SET-USER-DATA',\r\n\r\n}\r\n\r\nexport type ProfileReducersActionsType =\r\n    | UpdateProfile\r\n    | SetUserData\r\n\r\ntype SetUserData = {\r\n    type: PROFILE_ACTIONS.SET_USER_DATA\r\n    payload: ProfileReducerType\r\n}\r\ntype UpdateProfile = {\r\n    type: PROFILE_ACTIONS.UPDATE_PROFILE\r\n    payload: { name: string, avatar: string }\r\n}\r\nexport const setUserData = (profile: ProfileReducerType): SetUserData =>\r\n    ({type: PROFILE_ACTIONS.SET_USER_DATA, payload: profile})\r\n\r\nexport const modifyProfile = (changes: { name: string, avatar: string }): UpdateProfile =>\r\n    ({type: PROFILE_ACTIONS.UPDATE_PROFILE, payload: changes})","import {PacksResponseType, QueryPackParamsType} from \"../../main/api/types\";\r\nimport {PACK_ACTIONS, PacksReducerActionsType, setPacks} from \"../actions/packsReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {packAPI} from \"../../main/api/api\";\r\nimport {setOperationStatus} from \"../actions/appReducerActions\";\r\n\r\nexport type InitStateType = PacksResponseType & QueryPackParamsType & {isMyPack:boolean}\r\n\r\nexport const initState: InitStateType = {\r\n    cardPacks: [{\r\n        _id: '',\r\n        cardsCount: 0,\r\n        name: '',\r\n        created: '',\r\n        updated: '',\r\n        user_id: '',\r\n        private: false,\r\n        user_name: '',\r\n    }],\r\n    packName: '',\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    min: 0,\r\n    max: 0,\r\n    user_id: '',\r\n    sortPacks: '',\r\n    isMyPack:true,\r\n}\r\n\r\nexport const packsReducer = (state = initState, action: PacksReducerActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case PACK_ACTIONS.SET_PACKS:\r\n        case PACK_ACTIONS.SET_SORT_PUCKS:\r\n        case PACK_ACTIONS.SET_PACK_NAME:\r\n        case PACK_ACTIONS.SET_RANGE_CARDS:\r\n        case PACK_ACTIONS.SET_PAGE_OF_PACKS:\r\n        case PACK_ACTIONS.SET_PAGE_COUNT:\r\n        case PACK_ACTIONS.SET_IS_MY_PACK:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getPacks = (queryParams?: Partial<QueryPackParamsType>): ThunkType => async (dispatch, getState) => {\r\n    const {packName, sortPacks, page, pageCount, max, min, user_id} = getState().packs\r\n    try {\r\n        dispatch(setOperationStatus('loading'))\r\n        const response = await packAPI.getPacks({\r\n            packName,\r\n            sortPacks,\r\n            page,\r\n            pageCount,\r\n            max,\r\n            min,\r\n            user_id,\r\n            ...queryParams\r\n        })\r\n        dispatch(setPacks(response.data))\r\n        dispatch(setOperationStatus('completed'))\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n}\r\nexport const addPack = (): ThunkType => async (dispatch, getState) => {\r\n    const user_id = getState().profile._id\r\n    try {\r\n        dispatch(setOperationStatus('loading'))\r\n        await packAPI.addPack({name: 'another name'})\r\n        await dispatch(getPacks({user_id}))\r\n        dispatch(setOperationStatus('completed'))\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n}\r\nexport const deletePack = (id: string): ThunkType => async (dispatch, getState) => {\r\n    const user_id = getState().profile._id\r\n    try {\r\n        dispatch(setOperationStatus('loading'))\r\n        await packAPI.deletePack(id)\r\n        await dispatch(getPacks({user_id}))\r\n        dispatch(setOperationStatus('completed'))\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n","import style from './tableItem.module.scss'\r\nimport {CardsType, PackType} from \"../../../api/types\";\r\nimport SuperButton from \"../SuperButton/SuperButton\";\r\nimport {memo, useCallback} from \"react\";\r\nimport {useTypedDispatch} from \"../../../hooks/useTypedDispatch\";\r\nimport {deletePack} from \"../../../../store/reducers/packsReducer\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {Path} from \"../../Routes/Router\";\r\nimport {Rating} from \"@mui/material\";\r\n\r\ntype TableItemType = {\r\n    pack?: PackType\r\n    card?: CardsType\r\n}\r\nexport const TableItem = memo(({pack, card}: TableItemType) => {\r\n    const navigate = useNavigate()\r\n    const {pathname} = useLocation()\r\n\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const handleDeleteClick = useCallback(() => {\r\n        pack && dispatch(deletePack(pack._id))\r\n    }, [dispatch, pack])\r\n\r\n    const handleNameClick = useCallback(() => {\r\n        navigate(`/cards-list/${pack?._id}`)\r\n    }, [navigate, pack])\r\n\r\n    if (pack) {\r\n        return (\r\n            <div className={style.itemsPacksBlock}>\r\n                <div className={style.tableItemName} onClick={handleNameClick}>{pack.name}</div>\r\n                <div className={style.tableItem}>{pack.cardsCount}</div>\r\n                <div className={style.tableItem}>{pack?.updated.slice(0, 10)}</div>\r\n                <div className={style.tableItem}>{pack.user_name}</div>\r\n\r\n                <div className={style.tableItem}>\r\n                    {pathname !== Path.PacksList &&\r\n                        <>\r\n                            <SuperButton\r\n                                onClick={handleDeleteClick}\r\n                            >\r\n                                Delete\r\n                            </SuperButton>\r\n                            <SuperButton\r\n\r\n                            >\r\n                                Edit\r\n                            </SuperButton>\r\n                        </>}\r\n                    <SuperButton\r\n\r\n                    >\r\n                        Learn\r\n                    </SuperButton>\r\n                </div>\r\n            </div>)\r\n    }\r\n    if (card) {\r\n        return (\r\n            <div className={style.itemsCardsBlock}>\r\n                <div className={style.tableItem}>{card?.question}</div>\r\n                <div className={style.tableItem}>{card?.answer}</div>\r\n                <div className={style.tableItem}>{card?.updated.slice(0, 10)}</div>\r\n                <div className={style.tableItem}>\r\n                    <Rating\r\n                        name=\"read-only\"\r\n                        size={'small'}\r\n                        value={card?.grade}\r\n                        readOnly/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>'null'</div>\r\n    )\r\n})","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectPagePacksReducer = (state:AppStoreType):number => state.packs.page","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectCardPacksTotalCountPacksReducer = (state:AppStoreType):number => state.packs.cardPacksTotalCount","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectPageCountPacksReducer = (state:AppStoreType):number => state.packs.pageCount","export const countOfPacksOnPage : number[] = [10, 20, 30]","import style from './packTable.module.scss'\r\nimport {Search} from \"../../common/Search/Search\";\r\nimport {PackTableHeader} from \"./PackTableHeader\";\r\nimport {TableItem} from \"../../common/TableItem/TableItem\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectOperationStatus, selectPacks} from \"../../../../store/selectors\";\r\nimport {CircularProgress, Pagination, Stack} from \"@mui/material\";\r\nimport {ChangeEvent} from \"react\";\r\nimport {useTypedDispatch} from \"../../../hooks/useTypedDispatch\";\r\nimport {selectPagePacksReducer} from \"../../../../store/selectors/selectPagePacksReducer\";\r\nimport {setPageCount, setPageOfPacks} from \"../../../../store/actions/packsReducerActions\";\r\nimport {selectCardPacksTotalCountPacksReducer} from '../../../../store/selectors/selectCardPacksTotalCountPacksReducer';\r\nimport {selectPageCountPacksReducer} from \"../../../../store/selectors/selectPageCountPacksReducer\";\r\nimport {countOfPacksOnPage} from \"../../../constants/countOfPacksOnPage\";\r\n\r\n\r\nexport const PacksTable = () => {\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const packs = useSelector(selectPacks)\r\n    const operationStatus = useSelector(selectOperationStatus)\r\n\r\n    const page = useSelector(selectPagePacksReducer)\r\n    const cardPacksTotalCount = useSelector(selectCardPacksTotalCountPacksReducer)\r\n    const pageCount = useSelector(selectPageCountPacksReducer)\r\n\r\n    const count = Math.ceil(cardPacksTotalCount / pageCount)\r\n\r\n    const handleChange = (event: ChangeEvent<unknown>, value: number) => {\r\n        dispatch(setPageOfPacks(value))\r\n    };\r\n\r\n    const onChangeSelect = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPageCount(+e.target.value))\r\n    }\r\n\r\n    return (\r\n        <div className={style.tableContainer}>\r\n            {\r\n                operationStatus === 'loading'\r\n                    ? <div className={style.progress}>\r\n                        <CircularProgress/>\r\n                    </div>\r\n\r\n                    : <>\r\n                        <Search location={\"/packs-list\"}/>\r\n                        <PackTableHeader/>\r\n                        <div className={style.itemsWrapper}>\r\n                            {packs.map(p => <TableItem key={p._id} pack={p}/>)}\r\n                        </div>\r\n                    </>\r\n\r\n            }\r\n            <div className={style.paginationAndSelect}>\r\n                <Stack spacing={2}>\r\n                    <Pagination\r\n                        count={count}\r\n                        variant=\"outlined\"\r\n                        shape=\"rounded\"\r\n                        page={page}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Stack>\r\n                <div className={style.selectBlock}>\r\n                    <span className={style.selectName}>Packs on page:</span>\r\n                    <select value={pageCount} onChange={onChangeSelect} className={style.select}>\r\n                        {countOfPacksOnPage.map((c, index) => <option key={index}>{c}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from \"./profileInfo.module.scss\"\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {memo, useCallback} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectProfileData} from \"../../../../store/selectors\";\r\nimport {useTypedDispatch} from \"../../../utils\";\r\nimport {PacksTable} from \"../../PacksList/PacksTable/PacksTable\";\r\nimport {addPack} from \"../../../../store/reducers/packsReducer\";\r\n\r\n\r\ntype ProfileInfoType = {\r\n    changeProfileEditingStatus: (status: boolean) => void\r\n}\r\n\r\nexport const ProfileInfo = memo(({\r\n                                     changeProfileEditingStatus,\r\n                                 }: ProfileInfoType) => {\r\n\r\n    const dispatch = useTypedDispatch()\r\n    const profile = useSelector(selectProfileData)\r\n\r\n    const handleChangeProfileEditingStatus = useCallback(() => {\r\n        changeProfileEditingStatus(true)\r\n    }, [changeProfileEditingStatus])\r\n\r\n    const handleAddPackClick = useCallback(() => {\r\n        dispatch(addPack())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.info_block}>\r\n                <div className={style.inner_info_top}>\r\n                    <img alt={\"avatar\"} src={profile.avatar} className={style.ava}/>\r\n                    <div className={style.name}>Name: {profile.name}</div>\r\n                    <div className={style.blockButtons}>\r\n                        <SuperButton\r\n                            onClick={handleChangeProfileEditingStatus}\r\n                        >\r\n                            Edit Profile\r\n                        </SuperButton>\r\n                        <SuperButton\r\n                            onClick={handleAddPackClick}\r\n                        >\r\n                            Add pack\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n                <div className={style.inner_info_bottom}>\r\n\r\n                </div>\r\n            </div>\r\n            <PacksTable/>\r\n        </div>\r\n    )\r\n})","import {CardsResponseType} from \"../../main/api/types\";\r\nimport {PACK_ACTIONS} from \"./packsReducerActions\";\r\n\r\n\r\nexport enum CARD_ACTIONS {\r\n    SET_CARDS = 'Cards/SET-CARDS',\r\n    SET_PAGE_OF_CARDS = 'Cards/SET-PAGE-OF-CARDS',\r\n    SET_SORT_CARDS = 'Cards/SET-SORT-CARDS'\r\n}\r\n\r\nexport type CardsReducerActionsType =\r\n    | ReturnType<typeof setCards>\r\n    | ReturnType<typeof setPageOfCards>\r\n    | ReturnType<typeof setSortCards>\r\n\r\n\r\nexport const setCards = (cards: CardsResponseType) =>\r\n    ({type: CARD_ACTIONS.SET_CARDS, payload: cards} as const)\r\nexport const setPageOfCards = (page: number) =>\r\n    ({type: CARD_ACTIONS.SET_PAGE_OF_CARDS, payload: {page}} as const)\r\nexport const setSortCards = (sortCards: string) =>\r\n    ({type: CARD_ACTIONS.SET_SORT_CARDS, payload: {sortCards}} as const)","\r\nimport {modifyProfile, PROFILE_ACTIONS, ProfileReducersActionsType} from \"../actions/profileReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {ProfileResponseType} from \"../../main/api/types\";\r\nimport {setErrorMessage, setIsLoggedIn, setOperationStatus} from \"../actions/appReducerActions\";\r\nimport {userAPI} from \"../../main/api/api\";\r\n\r\nexport type ProfileReducerType = ProfileResponseType // на тот случай, если в стейте будут лежать свойства отличные от бэка\r\nconst initState: ProfileReducerType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n}\r\n\r\nexport const profileReducer = (state: ProfileReducerType = initState, action: ProfileReducersActionsType): ProfileReducerType => {\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS.SET_USER_DATA:\r\n        case PROFILE_ACTIONS.UPDATE_PROFILE:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const updateProfile = (changes: Pick<ProfileResponseType, \"name\" | \"avatar\">): ThunkType =>\r\n    async dispatch => {\r\n        try {\r\n            dispatch(setOperationStatus(\"loading\"))\r\n            const response = await userAPI.updateProfile(changes)\r\n            dispatch(modifyProfile(response.data.updatedUser))\r\n        }\r\n        catch (error){\r\n\r\n        }\r\n        finally {\r\n            dispatch(setOperationStatus(\"completed\"))\r\n        }\r\n    }\r\n\r\nexport const logout = (): ThunkType => async dispatch => {\r\n    try {\r\n        await userAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n    } catch (e: any) {\r\n        dispatch(setErrorMessage(e))\r\n    }\r\n}\r\n\r\n","import styles from './preloader.module.css';\r\ntype PreloaderType = {\r\n    width?:string\r\n    height?:string\r\n}\r\n\r\nexport const Preloader = ({width,height}:PreloaderType) => (\r\n    <div className={styles.container}>\r\n        <div style={{width:width,height:height}} className={styles.loader} />\r\n    </div>\r\n);\r\n\r\n","import React, {memo, useCallback, useState} from \"react\";\r\nimport style from \"./personalInformation.module.scss\"\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectOperationStatus, selectProfileData} from \"../../../../store/selectors\";\r\nimport {updateProfile} from \"../../../../store/reducers/profileReducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {useTypedDispatch} from \"../../../utils\";\r\n\r\ntype PersonalInformationType = {\r\n    changeProfileEditingStatus: (status: boolean) => void\r\n\r\n}\r\nexport const PersonalInformation = memo(({\r\n                                             changeProfileEditingStatus,\r\n                                         }: PersonalInformationType) => {\r\n\r\n    const dispatch = useTypedDispatch()\r\n    const profile = useSelector(selectProfileData)\r\n    const operationStatus = useSelector(selectOperationStatus)\r\n\r\n    const [nickname, setNickname] = useState<string>(profile.name)\r\n    const [avatar, setAvatar] = useState<string | undefined>(profile.avatar)\r\n\r\n    const handlerOnclickCancel = useCallback(() => {\r\n        changeProfileEditingStatus(false)\r\n    }, [changeProfileEditingStatus])\r\n\r\n    const handlerOnclickSave = useCallback(() => {\r\n        dispatch(updateProfile({name: nickname, avatar}))\r\n    }, [dispatch, nickname, avatar])\r\n\r\n    const disableButton = nickname === profile.name && avatar === profile.avatar\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.title}>Personal information</div>\r\n            <img alt={\"avatar\"} src={profile.avatar} className={style.ava}/>\r\n            <div className={style.input_container}>\r\n                <span>Nickname:</span>\r\n                <SuperInputText\r\n                    value={nickname}\r\n                    onChangeText={setNickname}\r\n                />\r\n                <span>URL avatar:</span>\r\n                <SuperInputText\r\n                    value={avatar}\r\n                    onChangeText={setAvatar}\r\n                />\r\n            </div>\r\n            <div className={style.button_container}>\r\n                <SuperButton\r\n                    onClick={handlerOnclickCancel}\r\n                >\r\n                    Cancel\r\n                </SuperButton>\r\n                <SuperButton\r\n                    disabled={disableButton}\r\n                    onClick={handlerOnclickSave}\r\n                > {operationStatus === \"loading\"\r\n                    ? <Preloader width={\"6px\"} height={\"6px\"}/>\r\n                    : \"Save\"\r\n                }\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectMinPacksReducer = (state:AppStoreType):number => state.packs.min","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectMaxPacksReducer = (state:AppStoreType):number => state.packs.max","import {useEffect, useState} from 'react';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {PersonalInformation} from './PersonalInformation/PersonalInformation';\r\nimport style from './profile.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectSearchPackName, selectSortPacks, selectUserId} from \"../../../store/selectors\";\r\nimport {selectPagePacksReducer} from \"../../../store/selectors/selectPagePacksReducer\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {getPacks} from \"../../../store/reducers/packsReducer\";\r\nimport {selectMinPacksReducer} from \"../../../store/selectors/selectMinPacksReducer\";\r\nimport {useTypedDispatch} from \"../../hooks/useTypedDispatch\";\r\nimport {selectMaxPacksReducer} from \"../../../store/selectors/selectMaxPacksReducer\";\r\nimport {AppStoreType} from \"../../../store/store\";\r\nimport {selectPageCountPacksReducer} from \"../../../store/selectors/selectPageCountPacksReducer\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const [profileEditingStatus, setProfileEditingStatus] = useState<boolean>(false)\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const user_id = useSelector(selectUserId)\r\n    const packName = useSelector(selectSearchPackName)\r\n    const sortPacks = useSelector(selectSortPacks)\r\n    const min = useSelector(selectMinPacksReducer)\r\n    const max = useSelector(selectMaxPacksReducer)\r\n    const page = useSelector(selectPagePacksReducer)\r\n    const pageCount = useSelector(selectPageCountPacksReducer)\r\n    const isMyPack = useSelector((state: AppStoreType) => state.packs.isMyPack)\r\n\r\n    const {pathname} = useLocation()\r\n\r\n    useEffect(() => {\r\n\r\n        isMyPack && dispatch(getPacks({user_id}))\r\n    }, [sortPacks, user_id, dispatch, pathname, packName, min, max, page,pageCount])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {!profileEditingStatus\r\n                ? <ProfileInfo\r\n                    changeProfileEditingStatus={setProfileEditingStatus}\r\n                />\r\n                : <PersonalInformation\r\n                    changeProfileEditingStatus={setProfileEditingStatus}\r\n                />}\r\n        </div>\r\n    )\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {userAPI} from \"../../main/api/api\";\r\nimport {setUserData} from \"../actions/profileReducerActions\";\r\nimport {setErrorMessage, setIsLoggedIn, setOperationStatus} from \"../actions/appReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\n\r\ntype InitStateType = typeof initState;\r\ntype AllActionsType = ReturnType<typeof getLoginAC>\r\n\r\nconst initState = {\r\n    email: '',\r\n    name: '',\r\n    isLogin: false\r\n};\r\n\r\nexport const loginReducer = (state = initState, action: AllActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"GET_LOGIN\":\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                name: action.name,\r\n                isLogin: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getLoginAC = (email: string, name: string) => {\r\n    return {\r\n        type: \"GET_LOGIN\",\r\n        email,\r\n        name,\r\n    } as const\r\n}\r\n\r\nexport const getLoginUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(setOperationStatus(\"loading\"))\r\n    userAPI.logIn(email, password, rememberMe)\r\n        .then(data => {\r\n            dispatch(getLoginAC(data.email, data.name))\r\n            dispatch(setUserData(data))\r\n            dispatch(setIsLoggedIn(true))\r\n            dispatch(setErrorMessage(\"\"))\r\n\r\n        })\r\n        .catch(err => {\r\n            // const error = err.response ? err.response.data.error : (err.message + ', more details in the console');\r\n            // console.log('Error: ', error)\r\n            dispatch(setErrorMessage(err.response ? err.response.data.error : err.message))\r\n        })\r\n        .finally( () => {\r\n            dispatch((setOperationStatus(\"completed\")))\r\n        })\r\n}\r\n\r\nexport const forgotPassword = (email: string): ThunkType => async dispatch => {\r\n    try {\r\n        await userAPI.forgotPassword(email)\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\nexport const sendNewPassword = (password: string, token: string): ThunkType => async dispatch => {\r\n    try {\r\n        await userAPI.newPassword(password, token)\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n","import React, {useCallback, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./resetPassword.module.scss\"\r\nimport {useTypedDispatch} from \"../../utils\";\r\nimport {forgotPassword} from \"../../../store/reducers/loginReducer\";\r\n\r\n\r\nexport const ResetPassword = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const handleButtonClick = useCallback(() => {\r\n        dispatch(forgotPassword(email))\r\n    },[dispatch,email])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <SuperInputText\r\n                value={email}\r\n                placeholder={\"email\"}\r\n                onChangeText={setEmail}\r\n            />\r\n            <SuperButton\r\n                disabled={email === ''}\r\n                onClick={handleButtonClick}\r\n            >\r\n                Send instructions\r\n            </SuperButton>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useCallback, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./createNewPassword.module.scss\"\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useTypedDispatch} from \"../../utils\";\r\nimport {sendNewPassword} from \"../../../store/reducers/loginReducer\";\r\n\r\nexport const CreateNewPassword = () => {\r\n\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const dispatch = useTypedDispatch()\r\n    const {token} = useParams<\"token\">()\r\n\r\n    const handleSendNewPassword = useCallback(() => {\r\n        dispatch(sendNewPassword(newPassword, token!))\r\n    }, [dispatch,newPassword,token])\r\n\r\n    return (\r\n        <div>\r\n            Create new password\r\n            <div className={style.container}>\r\n                <SuperInputText\r\n                    placeholder={'new password'}\r\n                    value={newPassword}\r\n                    onChangeText={setNewPassword}\r\n                />\r\n                <SuperButton\r\n                    onClick={handleSendNewPassword}\r\n                >\r\n                    Create new password\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n           <span>\r\n               {children && <span className={s.spanClassName}>{children}</span>}\r\n           </span>\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {getLoginUserData} from \"../../../store/reducers/loginReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Path} from \"../Routes/Router\";\r\nimport style from \"./LogIn.module.css\"\r\nimport {selectErrorMessage, selectOperationStatus} from \"../../../store/selectors\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {setErrorMessage} from \"../../../store/actions/appReducerActions\";\r\n\r\nexport const LogIn = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<string>('testdefreezz@yandex.by')\r\n    const [password, setPassword] = useState<string>('13606744')\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const operationStatus = useSelector(selectOperationStatus)\r\n    const error = useSelector(selectErrorMessage)\r\n\r\n    const onClickButtonLogin = () => {\r\n        dispatch(getLoginUserData(email, password, checked))\r\n        setEmail('')\r\n        setPassword('')\r\n        setChecked(false)\r\n    }\r\n\r\n    const onFocusEmailAndPasswordInput = () => {\r\n        dispatch(setErrorMessage(\"\"))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setErrorMessage(\"\"))\r\n    }, [dispatch])\r\n\r\n\r\n    if (operationStatus === 'loading') {\r\n        return <div className={style.preloader}><Preloader width={\"40px\"} height={\"40px\"}/></div>\r\n    }\r\n\r\n    return (\r\n        <div className={style.login}>\r\n            <div>\r\n                Sign in\r\n            </div>\r\n            {error && <div className={style.error}>{error}</div>}\r\n            <div>\r\n                Email\r\n            </div>\r\n            <div>\r\n                <SuperInputText\r\n\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    onFocus={onFocusEmailAndPasswordInput}\r\n                />\r\n            </div>\r\n            <div>\r\n                Password\r\n            </div>\r\n            <div>\r\n                <SuperInputText\r\n                    type={'password'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    onFocus={onFocusEmailAndPasswordInput}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox checked={checked} onChange={() => setChecked(!checked)}/>\r\n                <span>Remember me</span>\r\n            </div>\r\n            <div>\r\n                <SuperButton onClick={onClickButtonLogin}>Login</SuperButton>\r\n            </div>\r\n            <div>\r\n                <NavLink\r\n                    style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"#d39191\"\r\n                    }}\r\n                    to={Path.ResetPassword}\r\n                >\r\n                    Forgot password?\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink\r\n                    style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"#d39191\"\r\n                    }}\r\n                    to={Path.Registration}\r\n                >\r\n                    Registration\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport {Range}  from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: number[]) => void\r\n    value: number[]\r\n    min : number\r\n    max : number //\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange,\r\n        value,\r\n        min,\r\n        max\r\n    }\r\n) => {\r\n    const onChangeCallback = (newValue: number | number[]) => {\r\n        onChangeRange && onChangeRange(newValue as number[])\r\n    }\r\n    const track = {\r\n        left: 0,\r\n        height: 8,\r\n        borderRadius: 6,\r\n        backgroundColor: \"#757576\",\r\n    }\r\n    const handles = {\r\n        width: 14,\r\n        height: 14,\r\n        cursor: \"pointer\",\r\n        //cursor: -webkit-grab,\r\n        marginTop: -3,\r\n        borderRadius: \"50%\",\r\n        border: \"solid 2px #757576\",\r\n        backgroundColor: \"#757576\",\r\n    }\r\n    const rail = {\r\n        height:7,\r\n        backgroundColor:\"#acacb0\",\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Range\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                allowCross={false}\r\n                trackStyle={[track]}\r\n                handleStyle={[handles,handles]}\r\n                railStyle={rail}\r\n                min={min}\r\n                max={max}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import style from '../packList.module.scss'\r\nimport SuperDoubleRange from \"../../common/SuperDoubleRange/SuperDoubleRange\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../store/store\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {setRangeCards} from \"../../../../store/actions/packsReducerActions\";\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    //const pack = useSelector(packSelector);\r\n\r\n    const maxCardsCount = useSelector<AppStoreType, number>(state => state.packs.maxCardsCount)\r\n    const minCardsCount = useSelector<AppStoreType, number>(state => state.packs.minCardsCount)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [rangeValues, setRangeValues] = useState([minCardsCount, maxCardsCount])\r\n\r\n    const debouncedRange = useMemo(() => debounce( values => dispatch(setRangeCards(values)), 500), [dispatch])\r\n\r\n    const onChangeRangeCards = (values: number[]) => {\r\n        setRangeValues(values)\r\n        debouncedRange(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setRangeValues([minCardsCount, maxCardsCount])\r\n    }, [minCardsCount, maxCardsCount])\r\n\r\n    return (\r\n        <div className={style.sidebar}>\r\n            <div className={style.doubleRange}>\r\n                <span>Show number of cards</span>\r\n                <SuperDoubleRange value={rangeValues}\r\n                                  onChangeRange={onChangeRangeCards}\r\n                                  min={minCardsCount}\r\n                                  max={maxCardsCount}\r\n                />\r\n            </div>\r\n            <div className={style.minMaxRange}>\r\n                <div>{minCardsCount}</div>\r\n                <div>{maxCardsCount}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import style from './packList.module.scss'\r\nimport {PacksTable} from \"./PacksTable/PacksTable\";\r\nimport {Sidebar} from \"./Sidebar/Sidebar\";\r\nimport {useTypedDispatch} from \"../../hooks/useTypedDispatch\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectSearchPackName, selectSortPacks} from \"../../../store/selectors\";\r\nimport {selectMinPacksReducer} from \"../../../store/selectors/selectMinPacksReducer\";\r\nimport {selectMaxPacksReducer} from \"../../../store/selectors/selectMaxPacksReducer\";\r\nimport {selectPagePacksReducer} from \"../../../store/selectors/selectPagePacksReducer\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {getPacks} from \"../../../store/reducers/packsReducer\";\r\nimport {AppStoreType} from \"../../../store/store\";\r\nimport {selectPageCountPacksReducer} from \"../../../store/selectors/selectPageCountPacksReducer\";\r\n\r\nexport const PacksList = () => {\r\n\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const packName = useSelector(selectSearchPackName)\r\n    const sortPacks = useSelector(selectSortPacks)\r\n    const min = useSelector(selectMinPacksReducer)\r\n    const max = useSelector(selectMaxPacksReducer)\r\n    const page = useSelector(selectPagePacksReducer)\r\n    const pageCount = useSelector(selectPageCountPacksReducer)\r\n    const isMyPack = useSelector((state: AppStoreType) => state.packs.isMyPack)\r\n\r\n    const {pathname} = useLocation()\r\n\r\n    useEffect(() => {\r\n       !isMyPack &&  dispatch(getPacks())\r\n    }, [sortPacks, dispatch, pathname, packName, min, max, page,pageCount])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <Sidebar/>\r\n            <PacksTable/>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {Error404} from \"../common/Error404/Error404\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport {Profile} from \"../Profile/Profile\";\r\nimport {ResetPassword} from \"../ResetPassword/ResetPassword\";\r\nimport {CreateNewPassword} from \"../CreateNewPassword/CreateNewPassword\";\r\nimport {LogIn} from \"../LogIn/LogIn\";\r\nimport {PacksList} from \"../PacksList/PacksList\";\r\nimport {CardsList} from \"../CardsList/CardsList\";\r\n\r\nexport enum Path {\r\n  LogIn = \"/login\",\r\n  Registration = \"/registration\",\r\n  Profile = \"/profile\",\r\n  PacksList = \"/packs-list\",\r\n  CardsList = \"/cards-list/:cardsPack_id/*\",\r\n  ResetPassword = \"/reset-password\",\r\n  CreatePassword = \"/create-new-password\",\r\n  Error404 = \"/*\",\r\n}\r\n\r\nexport const Router = () => {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path={\"/\"} element={<Profile />} />\r\n        <Route path={Path.LogIn} element={ <LogIn />} />\r\n        <Route path={Path.Registration} element={<Registration />} />\r\n        <Route path={Path.Profile} element={<Profile />} />\r\n        <Route path={Path.PacksList} element={<PacksList />} />\r\n        <Route path={Path.CardsList} element={<CardsList />} />\r\n        <Route path={Path.ResetPassword} element={<ResetPassword />} />\r\n        <Route path={Path.CreatePassword} element={<CreateNewPassword />}\r\n        />\r\n        <Route path={Path.Error404} element={ <Error404 />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n","import {CardsResponseType, QueryCardsParamsType} from \"../../main/api/types\";\r\nimport {CARD_ACTIONS, CardsReducerActionsType, setCards} from \"../actions/cardsReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {setOperationStatus} from \"../actions/appReducerActions\";\r\nimport {cardsApi} from \"../../main/api/api\";\r\n\r\nexport type InitStateType = CardsResponseType & QueryCardsParamsType\r\nexport const initState: InitStateType = {\r\n    cards: [{\r\n        _id: '',\r\n        user_id: '',\r\n        updated: '',\r\n        created: '',\r\n        cardsPack_id: '',\r\n        answer: '',\r\n        grade: 0,\r\n        question: '',\r\n        shots: 0,\r\n    }],\r\n    cardsTotalCount: 0,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    packUserId: '',\r\n    page: 1,\r\n    pageCount: 10,\r\n    min:0,\r\n    max:0,\r\n    cardsPack_id:'',\r\n    cardAnswer:'',\r\n    cardQuestion:'',\r\n    sortCards:'',\r\n}\r\n\r\nexport const cardsReducer = (state = initState, action: CardsReducerActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case CARD_ACTIONS.SET_CARDS:\r\n        case CARD_ACTIONS.SET_PAGE_OF_CARDS:\r\n        case CARD_ACTIONS.SET_SORT_CARDS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getCards = (queryParams: Partial<QueryCardsParamsType>): ThunkType => async (dispatch, getState) => {\r\n    const {pageCount,page,sortCards} = getState().cards\r\n    try {\r\n        dispatch(setOperationStatus('loading'))\r\n        const response = await cardsApi.getCards({\r\n            pageCount,\r\n            page,\r\n            sortCards,\r\n            ...queryParams\r\n        })\r\n        dispatch(setCards(response.data))\r\n        dispatch(setOperationStatus('completed'))\r\n    } catch (e) {\r\n\r\n    }\r\n}","import {AppStoreType} from \"../store\";\r\nimport {CardsType} from \"../../main/api/types\";\r\n\r\nexport const selectCards = (state:AppStoreType):CardsType[] => state.cards.cards","import style from './cardsTable.module.scss'\r\nimport {useTypedDispatch} from \"../../../hooks/useTypedDispatch\";\r\nimport {useCallback} from \"react\";\r\nimport {setSortPacks} from \"../../../../store/actions/packsReducerActions\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectSortCards, selectSortPacks} from \"../../../../store/selectors\";\r\nimport {setSortCards} from \"../../../../store/actions/cardsReducerActions\";\r\n\r\nexport const CardsTableHeader = () => {\r\n    const dispatch = useTypedDispatch()\r\n    const sortCards = useSelector(selectSortCards)\r\n\r\n    const handleSort = useCallback((fieldName: string) => () => {\r\n        if (sortCards !== `1${fieldName}`)\r\n            dispatch(setSortCards(`1${fieldName}`))\r\n        else\r\n            dispatch(setSortCards(`0${fieldName}`))\r\n\r\n    },[dispatch,sortCards])\r\n\r\n    const classSortName = useCallback ((fieldName: string) => {\r\n        if (sortCards === `0${fieldName}`)\r\n            return style.arrowUp\r\n        else if (sortCards === `1${fieldName}`)\r\n            return style.arrowDown\r\n        else return ''\r\n    },[sortCards])\r\n\r\n    return (\r\n        <div className={style.headerTableContainer}>\r\n            <div onClick={handleSort('question')}\r\n                 className={style.tableHeaderItem}>\r\n                Question\r\n                <div\r\n                    className={classSortName('question')}\r\n                />\r\n            </div>\r\n            <div onClick={handleSort('answer')}\r\n                 className={style.tableHeaderItem}>\r\n                Answer\r\n                <div\r\n                    className={classSortName('answer')}\r\n                />\r\n            </div>\r\n            <div\r\n                onClick={handleSort('updated')}\r\n                className={style.tableHeaderItem}\r\n            >\r\n                Last Updated\r\n                <div\r\n                     className={classSortName('updated')}\r\n                />\r\n            </div>\r\n            <div\r\n                onClick={handleSort('grade')}\r\n                className={style.tableHeaderItem}\r\n            >\r\n                Rating\r\n                <div\r\n                    className={classSortName('grade')}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './cardsTable.module.scss'\r\nimport {Search} from \"../../common/Search/Search\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {\r\n    selectCardsPage,\r\n    selectCardsPageCount,\r\n    selectCardsTotalCount,\r\n    selectOperationStatus, selectSortCards\r\n} from \"../../../../store/selectors\";\r\nimport {Box, CircularProgress, Pagination, Stack} from \"@mui/material\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {TableItem} from \"../../common/TableItem/TableItem\";\r\nimport {ChangeEvent, useEffect, useLayoutEffect} from \"react\";\r\nimport {getCards, initState} from \"../../../../store/reducers/cardsReducer\";\r\nimport {useTypedDispatch} from \"../../../hooks/useTypedDispatch\";\r\nimport {selectCards} from \"../../../../store/selectors/selectCards\";\r\nimport {ArrowBack} from \"@mui/icons-material\";\r\nimport {setCards, setPageOfCards} from \"../../../../store/actions/cardsReducerActions\";\r\nimport {CardsTableHeader} from \"./CardsTableHeader\";\r\n\r\n\r\nexport const CardsTable = () => {\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const {cardsPack_id} = useParams<{ cardsPack_id: string }>();\r\n    const navigateToPacksList = useNavigate()\r\n\r\n    const operationStatus = useSelector(selectOperationStatus)\r\n    const cards = useSelector(selectCards)\r\n    const sortCards = useSelector(selectSortCards)\r\n\r\n    const page = useSelector(selectCardsPage)\r\n    const cardsTotalCount = useSelector(selectCardsTotalCount)\r\n    const pageCount = useSelector(selectCardsPageCount)\r\n    const count = Math.ceil(cardsTotalCount / pageCount)\r\n\r\n    const handleChange = (event: ChangeEvent<unknown>, value: number) => {\r\n        dispatch(setPageOfCards(value))\r\n    };\r\n\r\n    const handleBackArrowClick = () => {\r\n        navigateToPacksList('/packs-list')\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => dispatch(setCards(initState))\r\n    }, [])\r\n    useLayoutEffect(() => {\r\n        dispatch(getCards({cardsPack_id}))\r\n    }, [dispatch, cardsPack_id, page,sortCards])\r\n\r\n    return (\r\n        <div className={style.tableContainer}>\r\n            <div\r\n                className={style.backArrow}\r\n                onClick={handleBackArrowClick}\r\n            >\r\n                <ArrowBack/>\r\n                Packs list\r\n            </div>\r\n\r\n\r\n            {\r\n                operationStatus === 'loading'\r\n                    ? <Box sx={{display: 'flex'}}>\r\n                        <CircularProgress/>\r\n                    </Box>\r\n\r\n                    : <>\r\n                        <Search location={\"/cards-list\"}/>\r\n                        <CardsTableHeader/>\r\n                        <div className={style.itemsWrapper}>\r\n                            {cards.map(c => <TableItem key={c._id} card={c}/>)}\r\n                        </div>\r\n                    </>\r\n            }\r\n            <div>\r\n                <Stack spacing={2}>\r\n                    <Pagination\r\n                        count={count}\r\n                        variant=\"outlined\"\r\n                        shape=\"rounded\"\r\n                        page={page}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Stack>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './cardsList.module.scss'\r\nimport {CardsTable} from \"./CardsTable/CardsTable\";\r\n\r\nexport const CardsList = () => {\r\n\r\n    return (\r\n        <div className={style.container}>\r\n\r\n            <CardsTable/>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport {ResetPassword} from \"../ResetPassword/ResetPassword\";\r\nimport {CreateNewPassword} from \"../CreateNewPassword/CreateNewPassword\";\r\nimport {LogIn} from \"../LogIn/LogIn\";\r\n\r\nexport enum Path {\r\n    LogIn = \"/login\",\r\n    Registration = \"/registration\",\r\n    ResetPassword = \"/reset-password\",\r\n    CreatePassword = \"/createNewPassword/:token/*\",\r\n\r\n}\r\n\r\nexport const RouterWithoutLogin = () => {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={\"/*\"} element={<LogIn />} />\r\n                <Route path={Path.LogIn} element={ <LogIn />} />\r\n                <Route path={Path.Registration} element={<Registration />} />\r\n                <Route path={Path.ResetPassword} element={<ResetPassword />} />\r\n                <Route path={Path.CreatePassword} element={<CreateNewPassword />}\r\n                />\r\n            </Routes>\r\n        </div>\r\n    );\r\n};\r\n","import React, {ReactElement, useCallback} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./header.module.scss\";\r\nimport {Path} from \"../Routes/Router\";\r\nimport {Person, Style} from \"@mui/icons-material\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {logout} from \"../../../store/reducers/profileReducer\";\r\nimport {useTypedDispatch} from \"../../hooks/useTypedDispatch\";\r\nimport {setModeIsMyPack, setPacks} from \"../../../store/actions/packsReducerActions\";\r\nimport {initState} from \"../../../store/reducers/packsReducer\";\r\n\r\n\r\ntype NavbarItemType = {\r\n    path: string\r\n    name: string\r\n    icon: ReactElement\r\n}\r\nconst navbarItems: NavbarItemType[] = [\r\n    {name: \"Profile\", path: Path.Profile, icon: <Person/>},\r\n    {name: \"Packs list\", path: Path.PacksList, icon: <Style/>},\r\n]\r\n\r\nconst NavbarItem = ({path, name, icon}: NavbarItemType) => {\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const handleOnNavClick = () => {\r\n        if (name === 'Profile') {\r\n            dispatch(setPacks(initState))\r\n            dispatch(setModeIsMyPack(true))\r\n        }\r\n        if (name === 'Packs list') {\r\n            dispatch(setPacks(initState))\r\n            dispatch(setModeIsMyPack(false))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <NavLink  to={path} onClick={handleOnNavClick}\r\n                        className={(navData) => navData.isActive ? style.active : ''}>\r\n                {name}{icon}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const handleLogoutClick = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.title}>\r\n                NEKO CARDS\r\n            </div>\r\n            <div className={style.nav}>{navbarItems.map((nav, index) =>\r\n                <NavbarItem\r\n                    icon={nav.icon}\r\n                    key={`${nav.name}+${index}`}\r\n                    name={nav.name}\r\n                    path={nav.path}\r\n                />)}</div>\r\n            <div>\r\n                <div className={style.logout_button}>\r\n                    <SuperButton\r\n                        onClick={handleLogoutClick}\r\n                    >\r\n                        Logout\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import {APP_ACTIONS, AppReducerActionsType, setInitialization, setIsLoggedIn} from \"../actions/appReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {setUserData} from \"../actions/profileReducerActions\";\r\nimport {userAPI} from \"../../main/api/api\";\r\n\r\nexport type PendingStatusType = 'idle' | 'failed' | 'completed' | 'loading';\r\ntype InitStateTypes = {\r\n    isLoggedIn: boolean\r\n    isInitialized: boolean\r\n    errorMessage: string | null\r\n    status: PendingStatusType\r\n};\r\nconst initState: InitStateTypes = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    errorMessage: null,\r\n    status: 'idle',\r\n};\r\n\r\nexport const appReducer = (state: InitStateTypes = initState, action: AppReducerActionsType): InitStateTypes => {\r\n\r\n    switch (action.type) {\r\n        case APP_ACTIONS.SET_INITIALIZATION:\r\n        case APP_ACTIONS.CHANGE_OPERATION_STATUS:\r\n        case APP_ACTIONS.SET_IS_LOGGED_IN:\r\n        case APP_ACTIONS.SET_ERROR_MESSAGE:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializeApp = (): ThunkType => async dispatch => {\r\n    try {\r\n        const response = await userAPI.me()\r\n        dispatch(setUserData(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (e: any) {\r\n        dispatch(setIsLoggedIn(false))\r\n    } finally {\r\n        dispatch(setInitialization(true))\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Header} from \"./Header/Header\";\r\nimport {Path, Router} from \"./Routes/Router\";\r\nimport {initializeApp} from \"../../store/reducers/appReducer\";\r\nimport {selectIsInit, selectIsLoggedIn} from \"../../store/selectors\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {useTypedDispatch} from \"../utils\";\r\nimport {RouterWithoutLogin} from \"./Routes/RouterWithoutLogin\";\r\nimport {setModeIsMyPack} from \"../../store/actions/packsReducerActions\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const isLoggedIn = useSelector(selectIsLoggedIn)\r\n    const isInitialized = useSelector(selectIsInit)\r\n    const {pathname} = useLocation()\r\n\r\n    useEffect(() => {\r\n        if (pathname === Path.PacksList) {\r\n            dispatch(setModeIsMyPack(false))\r\n        } else {\r\n            dispatch(setModeIsMyPack(true))\r\n        }\r\n        dispatch(initializeApp())\r\n\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) return <Preloader width={\"40px\"} height={\"40px\"}/>\r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn\r\n                ? <div className=\"App\">\r\n                    <Header/>\r\n                    <Router/>\r\n                </div>\r\n                : <div>\r\n                    <RouterWithoutLogin/>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {loginReducer} from \"./reducers/loginReducer\";\r\nimport {registrationReducer} from \"./reducers/registrationReducer\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport {ProfileReducersActionsType} from \"./actions/profileReducerActions\";\r\nimport {appReducer} from \"./reducers/appReducer\";\r\nimport {AppReducerActionsType} from \"./actions/appReducerActions\";\r\nimport {packsReducer} from \"./reducers/packsReducer\";\r\nimport {PacksReducerActionsType} from \"./actions/packsReducerActions\";\r\nimport {CardsReducerActionsType} from \"./actions/cardsReducerActions\";\r\nimport {cardsReducer} from \"./reducers/cardsReducer\";\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducers>;\r\n\r\nexport type AllActionsType =\r\n    | ProfileReducersActionsType\r\n    | AppReducerActionsType\r\n    | PacksReducerActionsType\r\n    | CardsReducerActionsType\r\n\r\n\r\nexport type ThunkType = ThunkAction<void, AppStoreType, unknown, AllActionsType>\r\n\r\nconst rootReducers = combineReducers({\r\n    app: appReducer,\r\n    logIn: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    packs: packsReducer,\r\n    cards:cardsReducer,\r\n});\r\nexport const store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {App} from \"./main/components/App\";\r\nimport {store} from \"./store/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"cardsTable_tableContainer__3d0i2\",\"backArrow\":\"cardsTable_backArrow__7YxFa\",\"headerTableContainer\":\"cardsTable_headerTableContainer__3ANWT\",\"tableHeaderItem\":\"cardsTable_tableHeaderItem__2Lisx\",\"arrowUp\":\"cardsTable_arrowUp__2bd2l\",\"arrowDown\":\"cardsTable_arrowDown__28UGi\",\"itemsWrapper\":\"cardsTable_itemsWrapper__1QIOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsCardsBlock\":\"tableItem_itemsCardsBlock__1rv8e\",\"tableItem\":\"tableItem_tableItem__1e01c\",\"tableItemButton\":\"tableItem_tableItemButton__xb-nc\",\"itemsPacksBlock\":\"tableItem_itemsPacksBlock__1i586\",\"tableItemName\":\"tableItem_tableItemName__-CTJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profileInfo_container__1ct-U\",\"info_block\":\"profileInfo_info_block__lC6E_\",\"inner_info_top\":\"profileInfo_inner_info_top__3I-84\",\"ava\":\"profileInfo_ava__3G3aH\",\"name\":\"profileInfo_name__3q2bQ\",\"blockButtons\":\"profileInfo_blockButtons__HvOE9\",\"inner_info_bottom\":\"profileInfo_inner_info_bottom__KwzjD\",\"logout_button\":\"profileInfo_logout_button__2FJXn\",\"rightContainer\":\"profileInfo_rightContainer__33z4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3FDwm\",\"title\":\"header_title__235lh\",\"nav\":\"header_nav__24D20\",\"item\":\"header_item__LerJ7\",\"active\":\"header_active__3R_Xw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"packList_container__1B1Qy\",\"sidebar\":\"packList_sidebar__rFg-n\",\"doubleRange\":\"packList_doubleRange__3I-tS\",\"minMaxRange\":\"packList_minMaxRange__1empU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"personalInformation_container__1sUrE\",\"title\":\"personalInformation_title__l5BG8\",\"ava\":\"personalInformation_ava__rJq0v\",\"input_container\":\"personalInformation_input_container__2hgZb\",\"button_container\":\"personalInformation_button_container__2zBxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__19QpR\",\"superInput\":\"SuperInputText_superInput__1phNM\",\"errorInput\":\"SuperInputText_errorInput__30_SM\",\"error\":\"SuperInputText_error__3hcWH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__17GA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LogIn_login__25kOR\",\"preloader\":\"LogIn_preloader__2cYtu\",\"error\":\"LogIn_error__usbQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Vhdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"search_searchContainer__1OLfE\",\"searchInput\":\"search_searchInput__1GvTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"preloader_container__22inb\",\"loader\":\"preloader_loader___OkgH\",\"spin\":\"preloader_spin__3HgIR\"};"],"sourceRoot":""}