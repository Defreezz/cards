{"version":3,"sources":["main/ui/Profile/PersonalInformation/personalInformation.module.scss","main/ui/common/SuperInputText/SuperInputText.module.css","main/ui/Header/Header.module.css","main/ui/common/SuperCheckbox/SuperCheckbox.module.css","main/ui/common/SuperButton/SuperButton.module.css","main/ui/common/Preloader/preloader.module.css","store/actions/appReducerActions.ts","reportWebVitals.ts","main/ui/Error404/Error404.tsx","main/ui/Registration/Registration.tsx","main/ui/common/SuperButton/SuperButton.tsx","store/selectors/selectOperationStatus.ts","store/selectors/selectIsLoggedIn.ts","store/selectors/selectIsInit.ts","store/selectors/selectProfileData.ts","store/actions/profileReducerActions.ts","main/ui/Routes/Router.tsx","main/api/api.ts","store/reducers/appReducer.ts","main/ui/Profile/ProfileInfo/ProfileInfo.tsx","main/ui/common/SuperInputText/SuperInputText.tsx","store/reducers/profileReducer.ts","main/ui/common/Preloader/Preloader.tsx","main/ui/Profile/PersonalInformation/PersonalInformation.tsx","main/ui/Profile/Profile.tsx","main/ui/ResetPassword/ResetPassword.tsx","main/ui/CreateNewPassword/CreateNewPassword.tsx","main/ui/common/SuperCheckbox/SuperCheckbox.tsx","main/ui/SuperComponents/SuperComponents.tsx","store/reducers/loginReducer.ts","main/ui/LogIn/LogIn.tsx","main/ui/Header/Header.tsx","main/ui/App.tsx","store/reducers/registrationReducer.ts","store/reducers/resetPasswordReducer.ts","store/reducers/createPasswordReducer.ts","store/store.ts","index.tsx","main/ui/Profile/ProfileInfo/profileInfo.module.scss"],"names":["module","exports","APP_ACTIONS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","Registration","SuperButton","memo","red","className","restProps","finalClassName","s","default","selectOperationStatus","state","app","status","selectIsLoggedIn","isLoggedIn","selectIsInit","isInitialized","selectProfileData","profile","PROFILE_ACTIONS","setIsLoggedIn","type","SET_IS_LOGGED_IN","payload","setOperationStatus","CHANGE_OPERATION_STATUS","Path","setUserData","SET_USER_DATA","modifyProfile","changes","UPDATE_PROFILE","instance","axios","create","withCredentials","baseURL","process","REACT_APP_BACK_URL","usersAPI","email","password","rememberMe","post","response","data","put","delete","initState","errorMessage","ProfileInfo","changeProfileEditingStatus","dispatch","useDispatch","useSelector","handlerChangeProfileEditingStatus","useCallback","handlerLogout","a","SET_ERROR_MESSAGE","style","container","info_block","inner_info_top","alt","src","avatar","ava","name","onClick","inner_info_bottom","logout_button","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","input","e","currentTarget","value","key","_id","publicCardPacksCount","created","Date","updated","isAdmin","verified","Preloader","width","height","styles","loader","PersonalInformation","operationStatus","useState","nickname","setNickname","setAvatar","handlerOnclickCancel","handlerOnclickSave","updatedUser","disableButton","title","input_container","button_container","disabled","Profile","profileEditingStatus","setProfileEditingStatus","ResetPassword","CreateNewPassword","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperComponents","LogIn","setEmail","setPassword","setChecked","target","getLoginAC","getLoginUserData","Router","path","element","CreatePassword","navbarItems","NavbarItem","item","to","navData","isActive","active","Header","nav","map","index","App","useEffect","SET_INITIALIZATION","rootReducers","combineReducers","action","logIn","registration","resetPassword","createPassword","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.364fef8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"personalInformation_container__3dTGK\",\"title\":\"personalInformation_title__2JiWd\",\"ava\":\"personalInformation_ava__2aN2M\",\"input_container\":\"personalInformation_input_container__38AZ2\",\"button_container\":\"personalInformation_button_container__aLPc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3shWS\",\"superInput\":\"SuperInputText_superInput__39g7U\",\"errorInput\":\"SuperInputText_errorInput__375qZ\",\"error\":\"SuperInputText_error__1jQFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav___BKkR\",\"item\":\"Header_item__3VOcF\",\"active\":\"Header_active__1aX-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2rxwZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Mc-U8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"preloader_container__2C76n\",\"loader\":\"preloader_loader__1JtT2\",\"spin\":\"preloader_spin__UNlg3\"};","import {PendingStatusType} from \"../reducers/appReducer\";\r\n\r\nexport enum APP_ACTIONS {\r\n    SET_IS_LOGGED_IN = 'Auth/SET-IS-LOGGED-IN',\r\n    SET_ERROR_MESSAGE ='App/SET-ERROR-MESSAGE',\r\n    CHANGE_OPERATION_STATUS ='App/CHANGE-OPERATION-STATUS',\r\n    SET_INITIALIZATION = 'App/SET-INITIALIZATION',\r\n}\r\nexport type AppReducerActionsType =\r\n    | SetIsLoggedIn\r\n    | SetErrorMessage\r\n    | ChangeOperationStatus\r\n    | SetInitialization\r\n\r\ntype SetIsLoggedIn = {\r\n    type: APP_ACTIONS.SET_IS_LOGGED_IN\r\n    payload:{isLoggedIn:boolean}\r\n}\r\ntype SetErrorMessage = {\r\n    type: APP_ACTIONS.SET_ERROR_MESSAGE\r\n    payload:{errorMessage:string|null}\r\n}\r\ntype ChangeOperationStatus = {\r\n    type: APP_ACTIONS.CHANGE_OPERATION_STATUS\r\n    payload:{status:PendingStatusType}\r\n}\r\ntype SetInitialization = {\r\n    type: APP_ACTIONS.SET_INITIALIZATION\r\n    payload:{isInitialized:boolean}\r\n}\r\n\r\nexport const setIsLoggedIn = (isLoggedIn: boolean):SetIsLoggedIn =>\r\n    ({type:APP_ACTIONS.SET_IS_LOGGED_IN, payload:{isLoggedIn}});\r\n\r\nexport const setErrorMessage = (errorMessage: string | null):SetErrorMessage =>\r\n    ({type: APP_ACTIONS.SET_ERROR_MESSAGE, payload:{errorMessage}});\r\n\r\nexport const setOperationStatus = (status: PendingStatusType):ChangeOperationStatus =>\r\n    ({type: APP_ACTIONS.CHANGE_OPERATION_STATUS, payload:{status}});\r\n\r\nexport const setInitialization = (isInitialized: boolean):SetInitialization =>\r\n    ({type: APP_ACTIONS.SET_INITIALIZATION, payload:{isInitialized}});","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nexport const Error404 = () => {\r\n  return <div>Error 404</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n  return <div>Registration</div>;\r\n};\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, memo} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = memo(({\r\n                                                         red,\r\n                                                         className,\r\n                                                         ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n                                                     }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n})\r\n\r\nexport default SuperButton\r\n","import {AppStoreType} from \"../store\";\r\nimport {PendingStatusType} from \"../reducers/appReducer\";\r\n\r\nexport const selectOperationStatus = (state:AppStoreType):PendingStatusType => state.app.status","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectIsLoggedIn = (state:AppStoreType):boolean => state.app.isLoggedIn","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectIsInit = (state:AppStoreType):boolean => state.app.isInitialized","import {AppStoreType} from \"../store\";\r\nimport {ProfileReducerType} from \"../reducers/profileReducer\";\r\n\r\nexport const selectProfileData = (state:AppStoreType):ProfileReducerType => state.profile","import {ProfileReducerType} from \"../reducers/profileReducer\";\r\n\r\nexport enum PROFILE_ACTIONS {\r\n    UPDATE_PROFILE = 'profile/UPDATE-PROFILE',\r\n    SET_USER_DATA = 'profile/SET-USER-DATA',\r\n\r\n}\r\nexport type ProfileReducersActionsType =\r\n    | UpdateProfile\r\n    | SetUserData\r\n\r\ntype SetUserData = {\r\n    type: PROFILE_ACTIONS.SET_USER_DATA\r\n    payload:ProfileReducerType\r\n}\r\ntype UpdateProfile = {\r\n    type: PROFILE_ACTIONS.UPDATE_PROFILE\r\n    payload:{name:string, avatar:string}\r\n}\r\nexport const setUserData = (profile:ProfileReducerType):SetUserData =>\r\n    ({type:PROFILE_ACTIONS.SET_USER_DATA,payload:{...profile}})\r\n\r\nexport const modifyProfile = (changes:{name:string, avatar:string} ):UpdateProfile =>\r\n    ({type: PROFILE_ACTIONS.UPDATE_PROFILE,payload: {...changes}})","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { Error404 } from \"../Error404/Error404\";\r\nimport { Registration } from \"../Registration/Registration\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { ResetPassword } from \"../ResetPassword/ResetPassword\";\r\nimport { CreateNewPassword } from \"../CreateNewPassword/CreateNewPassword\";\r\nimport { SuperComponents } from \"../SuperComponents/SuperComponents\";\r\nimport { LogIn } from \"../LogIn/LogIn\";\r\n\r\nexport enum Path {\r\n  LogIn = \"/login\",\r\n  Registration = \"/registration\",\r\n  Profile = \"/profile\",\r\n  ResetPassword = \"/resetPassword\",\r\n  CreatePassword = \"/createNewPassword\",\r\n  SuperComponents = \"/superComponents\",\r\n  Error404 = \"/*\",\r\n}\r\n\r\nexport const Router = () => {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path={\"/\"} element={<div>Empty page</div>} />\r\n        <Route path={Path.LogIn} element={ <LogIn />} />\r\n        <Route path={Path.Registration} element={<Registration />} />\r\n        <Route path={Path.Profile} element={<Profile />} />\r\n        <Route path={Path.ResetPassword} element={<ResetPassword />} />\r\n        <Route path={Path.CreatePassword} element={<CreateNewPassword />}\r\n        />\r\n        <Route path={Path.SuperComponents} element={ <SuperComponents />} />\r\n        <Route path={Path.Error404} element={ <Error404 />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport {ProfileResponseType} from \"./types\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: process.env.REACT_APP_BACK_URL || 'http://localhost:7542/2.0/',\r\n})\r\n\r\nexport const usersAPI = {\r\n    logIn(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    me() {\r\n        return  instance.post<ProfileResponseType>(`/auth/me`,{})\r\n\r\n    },\r\n    updateProfile (profile:Partial<ProfileResponseType>) {\r\n        return  instance.put<{updatedUser:{name:string,avatar:string}}>(`/auth/me`,profile)\r\n\r\n    },\r\n    logout (){\r\n        return instance.delete<{info: string,error: string;}>(`/auth/me/`,{})\r\n    },\r\n}","import {\r\n    APP_ACTIONS,\r\n    AppReducerActionsType,\r\n    setErrorMessage,\r\n    setInitialization,\r\n    setIsLoggedIn\r\n} from \"../actions/appReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {setUserData} from \"../actions/profileReducerActions\";\r\nimport {usersAPI} from \"../../main/api/api\";\r\n\r\nexport type PendingStatusType = 'idle' | 'failed' | 'completed' | 'loading';\r\ntype InitStateTypes = {\r\n    isLoggedIn: boolean\r\n    isInitialized: boolean\r\n    errorMessage: string | null\r\n    status: PendingStatusType\r\n};\r\nconst initState: InitStateTypes = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    errorMessage: null,\r\n    status: 'idle',\r\n};\r\n\r\nexport const appReducer = (state: InitStateTypes = initState, action: AppReducerActionsType): InitStateTypes => {\r\n\r\n    switch (action.type) {\r\n        case APP_ACTIONS.SET_INITIALIZATION:\r\n        case APP_ACTIONS.CHANGE_OPERATION_STATUS:\r\n        case APP_ACTIONS.SET_IS_LOGGED_IN:\r\n        case APP_ACTIONS.SET_ERROR_MESSAGE:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializeApp = (): ThunkType => async dispatch => {\r\n    try {\r\n        const response = await usersAPI.me()\r\n        dispatch(setUserData(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (e: any) {\r\n        dispatch(setIsLoggedIn(false))\r\n    }finally {\r\n        dispatch(setInitialization(true))\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => async dispatch => {\r\n    try {\r\n        await usersAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n    } catch (e: any) {\r\n        dispatch(setErrorMessage(e))\r\n    }\r\n}","import style from \"./profileInfo.module.scss\"\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport React, {Dispatch, memo, useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectProfileData} from \"../../../../store/selectors\";\r\nimport {ThunkType} from \"../../../../store/store\";\r\nimport {logout} from \"../../../../store/reducers/appReducer\";\r\n\r\ntype ProfileInfoType = {\r\n    changeProfileEditingStatus: (status: boolean) => void\r\n}\r\n\r\nexport const ProfileInfo = memo(({\r\n                                     changeProfileEditingStatus,\r\n                                 }: ProfileInfoType) => {\r\n    const dispatch = useDispatch<Dispatch<ThunkType>>()\r\n    const profile = useSelector(selectProfileData)\r\n\r\n    const handlerChangeProfileEditingStatus = useCallback(() => {\r\n        changeProfileEditingStatus(true)\r\n    }, [changeProfileEditingStatus])\r\n    const handlerLogout = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.info_block}>\r\n                <div className={style.inner_info_top}>\r\n                    <img alt={\"avatar\"} src={profile.avatar} className={style.ava}/>\r\n                    <div className={style.name}>{profile.name}</div>\r\n                    <SuperButton\r\n                        onClick={handlerChangeProfileEditingStatus}\r\n                    >\r\n                        Edit Profile\r\n                    </SuperButton>\r\n                </div>\r\n                <div className={style.inner_info_bottom}>\r\n                    <div className={style.logout_button}>\r\n                        <SuperButton\r\n                        onClick={handlerLogout}\r\n                    >\r\n                        Logout\r\n                    </SuperButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, memo} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = memo ((\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput: s.superInput} ${className? className: s.input}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default SuperInputText\r\n","\r\nimport {modifyProfile, PROFILE_ACTIONS, ProfileReducersActionsType} from \"../actions/profileReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {ProfileResponseType} from \"../../main/api/types\";\r\nimport {setOperationStatus} from \"../actions/appReducerActions\";\r\nimport {usersAPI} from \"../../main/api/api\";\r\n\r\nexport type ProfileReducerType = ProfileResponseType // на тот случай, если в стейте будут лежать свойства отличные от бэка\r\nconst initState: ProfileReducerType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n}\r\n\r\nexport const profileReducer = (state: ProfileReducerType = initState, action: ProfileReducersActionsType): ProfileReducerType => {\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS.SET_USER_DATA:\r\n        case PROFILE_ACTIONS.UPDATE_PROFILE:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const updateProfile = (changes: Pick<ProfileResponseType, \"name\" | \"avatar\">): ThunkType =>\r\n    async dispatch => {\r\n        try {\r\n            dispatch(setOperationStatus(\"loading\"))\r\n            const response = await usersAPI.updateProfile(changes)\r\n            dispatch(modifyProfile(response.data.updatedUser))\r\n        }\r\n        catch (error){\r\n\r\n        }\r\n        finally {\r\n            dispatch(setOperationStatus(\"completed\"))\r\n        }\r\n    }\r\n\r\n\r\n\r\n","import styles from './preloader.module.css';\r\ntype PreloaderType = {\r\n    width?:string\r\n    height?:string\r\n}\r\n\r\nexport const Preloader = ({width,height}:PreloaderType) => (\r\n    <div className={styles.container}>\r\n        <div style={{width:width,height:height}} className={styles.loader} />\r\n    </div>\r\n);\r\n\r\n","import React, {Dispatch, memo, useCallback, useState} from \"react\";\r\nimport style from \"./personalInformation.module.scss\"\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectOperationStatus, selectProfileData} from \"../../../../store/selectors\";\r\nimport {ThunkType} from \"../../../../store/store\";\r\nimport {updateProfile} from \"../../../../store/reducers/profileReducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\ntype PersonalInformationType = {\r\n    changeProfileEditingStatus: (status: boolean) => void\r\n\r\n}\r\nexport const PersonalInformation = memo(({\r\n                                             changeProfileEditingStatus,\r\n                                         }: PersonalInformationType) => {\r\n\r\n    const dispatch = useDispatch<Dispatch<ThunkType>>()\r\n    const profile = useSelector(selectProfileData)\r\n    const operationStatus = useSelector(selectOperationStatus)\r\n\r\n    const [nickname, setNickname] = useState<string>(profile.name)\r\n    const [avatar, setAvatar] = useState<string | undefined>(profile.avatar)\r\n\r\n    const handlerOnclickCancel = useCallback(() => {\r\n        changeProfileEditingStatus(false)\r\n    }, [changeProfileEditingStatus])\r\n\r\n    const handlerOnclickSave = useCallback(() => {\r\n        dispatch(updateProfile({name: nickname, avatar}))\r\n    }, [dispatch, nickname, avatar])\r\n\r\n    const disableButton = nickname === profile.name && avatar === profile.avatar\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.title}>Personal information</div>\r\n            <img alt={\"avatar\"} src={profile.avatar} className={style.ava}/>\r\n            <div className={style.input_container}>\r\n                <span>Nickname:</span>\r\n                <SuperInputText\r\n                    value={nickname}\r\n                    onChangeText={setNickname}\r\n                />\r\n                <span>URL avatar:</span>\r\n                <SuperInputText\r\n                    value={avatar}\r\n                    onChangeText={setAvatar}\r\n                />\r\n            </div>\r\n            <div className={style.button_container}>\r\n                <SuperButton\r\n                    onClick={handlerOnclickCancel}\r\n                >\r\n                    Cancel\r\n                </SuperButton>\r\n                <SuperButton\r\n                    disabled={disableButton}\r\n                    onClick={handlerOnclickSave}\r\n                > {operationStatus === \"loading\"\r\n                    ? <Preloader width={\"6px\"} height={\"6px\"}/>\r\n                    : \"Save\"\r\n                }\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useState} from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {PersonalInformation} from \"./PersonalInformation/PersonalInformation\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const [profileEditingStatus, setProfileEditingStatus] = useState<boolean>(false)\r\n\r\n    return (\r\n\r\n        !profileEditingStatus\r\n            ? <ProfileInfo\r\n                changeProfileEditingStatus={setProfileEditingStatus}\r\n            />\r\n            : <PersonalInformation\r\n                changeProfileEditingStatus={setProfileEditingStatus}\r\n            />\r\n    )\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ResetPassword = () => {\r\n  return <div>Reset password</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CreateNewPassword = () => {\r\n  return <div>Create new password</div>;\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n           <span>\n               {children && <span className={s.spanClassName}>{children}</span>}\n           </span>\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from \"react\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nexport const SuperComponents = () => {\r\n    return (\r\n        <div>\r\n            <SuperButton>Button </SuperButton>\r\n            <br/>\r\n            <SuperInputText/>\r\n            <br/>\r\n            <SuperCheckbox/>\r\n            <br/>\r\n        </div>\r\n    );\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { usersAPI } from \"../../main/api/api\";\r\nimport {setUserData} from \"../actions/profileReducerActions\";\r\nimport {setIsLoggedIn} from \"../actions/appReducerActions\";\r\n\r\ntype InitStateType = typeof initState;\r\ntype AllActionsType = ReturnType<typeof getLoginAC>\r\n\r\nconst initState = {\r\n    email: '',\r\n    name: '',\r\n};\r\n\r\nexport const loginReducer = (state = initState, action: AllActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"GET_LOGIN\":\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                name: action.name\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getLoginAC = (email: string, name: string) => {\r\n    return {\r\n        type: \"GET_LOGIN\",\r\n        email,\r\n        name,\r\n    } as const\r\n}\r\n\r\nexport const getLoginUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    usersAPI.logIn(email, password, rememberMe)\r\n        .then(data => {\r\n            dispatch(getLoginAC(data.email, data.name))\r\n\r\n            dispatch(setUserData(data))\r\n            dispatch(setIsLoggedIn(true))\r\n        })\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {getLoginUserData} from \"../../../store/reducers/loginReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const LogIn = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const onClickButtonLogin = () => {\r\n        dispatch(getLoginUserData(email, password, checked))\r\n        setEmail('')\r\n        setPassword('')\r\n        setChecked(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Sign in\r\n            </div>\r\n            <div>\r\n                Email\r\n            </div>\r\n            <div>\r\n                <input value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                Password\r\n            </div>\r\n            <div>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <input type=\"checkbox\" checked={checked} onChange={() => setChecked(!checked)}/>\r\n                <span>Remember me</span>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={onClickButtonLogin}>Login</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Header.module.css\";\r\nimport {Path} from \"../Routes/Router\";\r\n\r\ntype NavbarItemType = {\r\n    path: string\r\n    name: string\r\n}\r\nconst navbarItems: NavbarItemType[] = [\r\n    {name: \"Login\", path: Path.LogIn},\r\n    {name: \"Registration\", path: Path.Registration},\r\n    {name: \"Profile\", path: Path.Profile},\r\n    {name: \"404\", path: Path.Error404},\r\n    {name: \"Reset password\", path: Path.ResetPassword},\r\n    {name: \"Create  password\", path: Path.CreatePassword},\r\n    {name: \"SuperComponents\", path: Path.SuperComponents},\r\n]\r\n\r\nconst NavbarItem = ({path, name}: NavbarItemType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <NavLink to={path} className={(navData) => navData.isActive ? style.active : ''}>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.nav}>\r\n            {navbarItems.map((nav,index) => <NavbarItem key={`${nav.name}+${index}` } name={nav.name} path={nav.path}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {Dispatch, useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./Header/Header\";\r\nimport {ThunkType} from \"../../store/store\";\r\nimport {Router} from \"./Routes/Router\";\r\nimport {initializeApp} from \"../../store/reducers/appReducer\";\r\nimport {selectIsInit, selectIsLoggedIn} from \"../../store/selectors\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {LogIn} from \"./LogIn/LogIn\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch<Dispatch<ThunkType>>()\r\n    const isLoggedIn = useSelector(selectIsLoggedIn)\r\n    const isInitialized = useSelector(selectIsInit)\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) return <Preloader width={\"40px\"} height={\"40px\"}/>\r\n\r\n    return (\r\n        <HashRouter>\r\n            {isLoggedIn ?\r\n            <div className=\"App\">\r\n                    <Header/>\r\n                    <Router/>\r\n            </div>\r\n            : <LogIn/>}\r\n        </HashRouter>\r\n    );\r\n};\r\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const registrationReducer = (state = initState,action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const resetPasswordReducer = (state = initState, action: any): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const createPasswordReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {loginReducer} from \"./reducers/loginReducer\";\r\nimport {registrationReducer} from \"./reducers/registrationReducer\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport {resetPasswordReducer} from \"./reducers/resetPasswordReducer\";\r\nimport {createPasswordReducer} from \"./reducers/createPasswordReducer\";\r\nimport {ProfileReducersActionsType} from \"./actions/profileReducerActions\";\r\nimport {appReducer} from \"./reducers/appReducer\";\r\nimport {AppReducerActionsType} from \"./actions/appReducerActions\";\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducers>;\r\n\r\nexport type AllActionsType =\r\n  | ProfileReducersActionsType\r\n  | AppReducerActionsType\r\n\r\nexport type ThunkType = ThunkAction<void, AppStoreType, unknown, AllActionsType>\r\n\r\nconst rootReducers = combineReducers({\r\n  app:appReducer,\r\n  logIn: loginReducer,\r\n  registration: registrationReducer,\r\n  profile: profileReducer,\r\n  resetPassword: resetPasswordReducer,\r\n  createPassword: createPasswordReducer,\r\n});\r\nexport const store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {App} from \"./main/ui/App\";\r\nimport {store} from \"./store/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profileInfo_container__QufAB\",\"info_block\":\"profileInfo_info_block__1_dJH\",\"inner_info_top\":\"profileInfo_inner_info_top__3F_a8\",\"ava\":\"profileInfo_ava__3NeEJ\",\"name\":\"profileInfo_name__2AOzZ\",\"inner_info_bottom\":\"profileInfo_inner_info_bottom__2kgha\",\"logout_button\":\"profileInfo_logout_button__3mlJ6\"};"],"sourceRoot":""}