{"version":3,"sources":["main/ui/Profile/ProfileInfo/profileInfo.module.scss","main/ui/Profile/PersonalInformation/personalInformation.module.scss","main/ui/common/SuperInputText/SuperInputText.module.css","main/ui/Header/Header.module.css","main/ui/common/SuperCheckbox/SuperCheckbox.module.css","main/ui/common/SuperButton/SuperButton.module.css","main/ui/common/Preloader/preloader.module.css","main/ui/ResetPassword/resetPassword.module.scss","main/ui/CreateNewPassword/createNewPassword.module.scss","store/actions/profileReducerActions.ts","reportWebVitals.ts","main/ui/Error404/Error404.tsx","main/ui/Registration/Registration.tsx","main/ui/common/SuperButton/SuperButton.tsx","store/selectors/selectOperationStatus.ts","store/selectors/selectIsLoggedIn.ts","store/selectors/selectIsInit.ts","store/selectors/selectProfileData.ts","store/actions/appReducerActions.ts","main/ui/Routes/Router.tsx","main/api/api.ts","main/constants/forgotPasswordMessage.ts","store/reducers/profileReducer.ts","main/utils/useTypedDispatch.ts","main/ui/Profile/ProfileInfo/ProfileInfo.tsx","main/ui/common/SuperInputText/SuperInputText.tsx","main/ui/common/Preloader/Preloader.tsx","main/ui/Profile/PersonalInformation/PersonalInformation.tsx","main/ui/Profile/Profile.tsx","store/reducers/loginReducer.ts","main/ui/ResetPassword/ResetPassword.tsx","main/ui/CreateNewPassword/CreateNewPassword.tsx","main/ui/common/SuperCheckbox/SuperCheckbox.tsx","main/ui/SuperComponents/SuperComponents.tsx","main/ui/LogIn/LogIn.tsx","main/ui/Routes/RouterWithoutLogin.tsx","main/ui/Header/Header.tsx","store/reducers/appReducer.ts","main/ui/App.tsx","store/reducers/registrationReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","PROFILE_ACTIONS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","Registration","SuperButton","memo","red","className","restProps","finalClassName","s","default","selectOperationStatus","state","app","status","selectIsLoggedIn","isLoggedIn","selectIsInit","isInitialized","selectProfileData","profile","APP_ACTIONS","setUserData","type","SET_USER_DATA","payload","modifyProfile","changes","UPDATE_PROFILE","Path","setIsLoggedIn","SET_IS_LOGGED_IN","setOperationStatus","CHANGE_OPERATION_STATUS","instance","axios","create","withCredentials","baseURL","usersAPI","post","put","email","password","rememberMe","response","data","delete","from","message","resetPasswordToken","initState","_id","name","avatar","publicCardPacksCount","created","Date","updated","isAdmin","verified","error","useTypedDispatch","useDispatch","ProfileInfo","changeProfileEditingStatus","dispatch","useSelector","handleChangeProfileEditingStatus","useCallback","handleLogoutClick","a","errorMessage","SET_ERROR_MESSAGE","style","container","info_block","inner_info_top","alt","src","ava","onClick","inner_info_bottom","logout_button","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","input","e","currentTarget","value","key","Preloader","width","height","styles","loader","PersonalInformation","operationStatus","useState","nickname","setNickname","setAvatar","handlerOnclickCancel","handlerOnclickSave","updatedUser","disableButton","title","input_container","button_container","disabled","Profile","profileEditingStatus","setProfileEditingStatus","ResetPassword","setEmail","handleButtonClick","forgotPassword","placeholder","CreateNewPassword","newPassword","setNewPassword","token","useParams","handleSendNewPassword","sendNewPassword","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperComponents","LogIn","setPassword","setChecked","target","getLoginAC","getLoginUserData","textDecoration","color","to","Router","path","element","CreatePassword","navbarItems","NavbarItem","item","navData","isActive","active","Header","nav","map","index","RouterWithoutLogin","App","useEffect","SET_INITIALIZATION","rootReducers","combineReducers","action","logIn","registration","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fb442fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profileInfo_container__QufAB\",\"info_block\":\"profileInfo_info_block__1_dJH\",\"inner_info_top\":\"profileInfo_inner_info_top__3F_a8\",\"ava\":\"profileInfo_ava__3NeEJ\",\"name\":\"profileInfo_name__2AOzZ\",\"inner_info_bottom\":\"profileInfo_inner_info_bottom__2kgha\",\"logout_button\":\"profileInfo_logout_button__3mlJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"personalInformation_container__3dTGK\",\"title\":\"personalInformation_title__2JiWd\",\"ava\":\"personalInformation_ava__2aN2M\",\"input_container\":\"personalInformation_input_container__38AZ2\",\"button_container\":\"personalInformation_button_container__aLPc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3shWS\",\"superInput\":\"SuperInputText_superInput__39g7U\",\"errorInput\":\"SuperInputText_errorInput__375qZ\",\"error\":\"SuperInputText_error__1jQFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav___BKkR\",\"item\":\"Header_item__3VOcF\",\"active\":\"Header_active__1aX-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2rxwZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Mc-U8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"preloader_container__2C76n\",\"loader\":\"preloader_loader__1JtT2\",\"spin\":\"preloader_spin__UNlg3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"resetPassword_container__Rs47Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"createNewPassword_container__3SUGX\"};","import {ProfileReducerType} from \"../reducers/profileReducer\";\r\n\r\nexport enum PROFILE_ACTIONS {\r\n    UPDATE_PROFILE = 'profile/UPDATE-PROFILE',\r\n    SET_USER_DATA = 'profile/SET-USER-DATA',\r\n\r\n}\r\nexport type ProfileReducersActionsType =\r\n    | UpdateProfile\r\n    | SetUserData\r\n\r\ntype SetUserData = {\r\n    type: PROFILE_ACTIONS.SET_USER_DATA\r\n    payload:ProfileReducerType\r\n}\r\ntype UpdateProfile = {\r\n    type: PROFILE_ACTIONS.UPDATE_PROFILE\r\n    payload:{name:string, avatar:string}\r\n}\r\nexport const setUserData = (profile:ProfileReducerType):SetUserData =>\r\n    ({type:PROFILE_ACTIONS.SET_USER_DATA,payload:{...profile}})\r\n\r\nexport const modifyProfile = (changes:{name:string, avatar:string} ):UpdateProfile =>\r\n    ({type: PROFILE_ACTIONS.UPDATE_PROFILE,payload: {...changes}})","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nexport const Error404 = () => {\r\n  return <div>Error 404</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n  return <div>Registration</div>;\r\n};\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, memo} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = memo(({\r\n                                                         red,\r\n                                                         className,\r\n                                                         ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n                                                     }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n})\r\n\r\nexport default SuperButton\r\n","import {AppStoreType} from \"../store\";\r\nimport {PendingStatusType} from \"../reducers/appReducer\";\r\n\r\nexport const selectOperationStatus = (state:AppStoreType):PendingStatusType => state.app.status","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectIsLoggedIn = (state:AppStoreType):boolean => state.app.isLoggedIn","import {AppStoreType} from \"../store\";\r\n\r\nexport const selectIsInit = (state:AppStoreType):boolean => state.app.isInitialized","import {AppStoreType} from \"../store\";\r\nimport {ProfileReducerType} from \"../reducers/profileReducer\";\r\n\r\nexport const selectProfileData = (state:AppStoreType):ProfileReducerType => state.profile","import {PendingStatusType} from \"../reducers/appReducer\";\r\n\r\nexport enum APP_ACTIONS {\r\n    SET_IS_LOGGED_IN = 'Auth/SET-IS-LOGGED-IN',\r\n    SET_ERROR_MESSAGE ='App/SET-ERROR-MESSAGE',\r\n    CHANGE_OPERATION_STATUS ='App/CHANGE-OPERATION-STATUS',\r\n    SET_INITIALIZATION = 'App/SET-INITIALIZATION',\r\n}\r\nexport type AppReducerActionsType =\r\n    | SetIsLoggedIn\r\n    | SetErrorMessage\r\n    | ChangeOperationStatus\r\n    | SetInitialization\r\n\r\ntype SetIsLoggedIn = {\r\n    type: APP_ACTIONS.SET_IS_LOGGED_IN\r\n    payload:{isLoggedIn:boolean}\r\n}\r\ntype SetErrorMessage = {\r\n    type: APP_ACTIONS.SET_ERROR_MESSAGE\r\n    payload:{errorMessage:string|null}\r\n}\r\ntype ChangeOperationStatus = {\r\n    type: APP_ACTIONS.CHANGE_OPERATION_STATUS\r\n    payload:{status:PendingStatusType}\r\n}\r\ntype SetInitialization = {\r\n    type: APP_ACTIONS.SET_INITIALIZATION\r\n    payload:{isInitialized:boolean}\r\n}\r\n\r\nexport const setIsLoggedIn = (isLoggedIn: boolean):SetIsLoggedIn =>\r\n    ({type:APP_ACTIONS.SET_IS_LOGGED_IN, payload:{isLoggedIn}});\r\n\r\nexport const setErrorMessage = (errorMessage: string | null):SetErrorMessage =>\r\n    ({type: APP_ACTIONS.SET_ERROR_MESSAGE, payload:{errorMessage}});\r\n\r\nexport const setOperationStatus = (status: PendingStatusType):ChangeOperationStatus =>\r\n    ({type: APP_ACTIONS.CHANGE_OPERATION_STATUS, payload:{status}});\r\n\r\nexport const setInitialization = (isInitialized: boolean):SetInitialization =>\r\n    ({type: APP_ACTIONS.SET_INITIALIZATION, payload:{isInitialized}});","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { Error404 } from \"../Error404/Error404\";\r\nimport { Registration } from \"../Registration/Registration\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { ResetPassword } from \"../ResetPassword/ResetPassword\";\r\nimport { CreateNewPassword } from \"../CreateNewPassword/CreateNewPassword\";\r\nimport { SuperComponents } from \"../SuperComponents/SuperComponents\";\r\nimport { LogIn } from \"../LogIn/LogIn\";\r\n\r\nexport enum Path {\r\n  LogIn = \"/login\",\r\n  Registration = \"/registration\",\r\n  Profile = \"/profile\",\r\n  ResetPassword = \"/resetPassword\",\r\n  CreatePassword = \"/createNewPassword\",\r\n  SuperComponents = \"/superComponents\",\r\n  Error404 = \"/*\",\r\n}\r\n\r\nexport const Router = () => {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path={\"/\"} element={<Profile />} />\r\n        <Route path={Path.LogIn} element={ <LogIn />} />\r\n        <Route path={Path.Registration} element={<Registration />} />\r\n        <Route path={Path.Profile} element={<Profile />} />\r\n        <Route path={Path.ResetPassword} element={<ResetPassword />} />\r\n        <Route path={Path.CreatePassword} element={<CreateNewPassword />}\r\n        />\r\n        <Route path={Path.SuperComponents} element={ <SuperComponents />} />\r\n        <Route path={Path.Error404} element={ <Error404 />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport {ProfileResponseType} from \"./types\";\r\nimport {forgotPasswordMessage} from \"../constants/forgotPasswordMessage\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\" //process.env.REACT_APP_BACK_URL || 'http://localhost:7542/2.0/',\r\n})\r\n\r\nexport const usersAPI = {\r\n    me() {\r\n        return instance.post<ProfileResponseType>(`/auth/me`, {})\r\n\r\n    },\r\n    updateProfile(profile: Partial<ProfileResponseType>) {\r\n        return instance.put<{ updatedUser: { name: string, avatar: string } }>(`/auth/me`, profile)\r\n\r\n    },\r\n    logIn(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ProfileResponseType>('auth/login', {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<{ info: string, error: string; }>(`/auth/me/`, {})\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post(`/auth/forgot/`, {\r\n            email,\r\n            from: \"test-front-admin <yatsevich-artsiom@yandex.by>\",\r\n            message: forgotPasswordMessage,\r\n        })\r\n    },\r\n    newPassword(password:string,resetPasswordToken:string){\r\n        return instance.post(`/auth/set-new-password/`,{password,resetPasswordToken})\r\n    }\r\n}","export const forgotPasswordMessage = `<div style='background-color:lime;padding:15px'><a href='https://defreezz.github.io/cards/#/createNewPassword/$token$'>Password recovery link</a></div>`","\r\nimport {modifyProfile, PROFILE_ACTIONS, ProfileReducersActionsType} from \"../actions/profileReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {ProfileResponseType} from \"../../main/api/types\";\r\nimport {setErrorMessage, setIsLoggedIn, setOperationStatus} from \"../actions/appReducerActions\";\r\nimport {usersAPI} from \"../../main/api/api\";\r\n\r\nexport type ProfileReducerType = ProfileResponseType // на тот случай, если в стейте будут лежать свойства отличные от бэка\r\nconst initState: ProfileReducerType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n}\r\n\r\nexport const profileReducer = (state: ProfileReducerType = initState, action: ProfileReducersActionsType): ProfileReducerType => {\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS.SET_USER_DATA:\r\n        case PROFILE_ACTIONS.UPDATE_PROFILE:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const updateProfile = (changes: Pick<ProfileResponseType, \"name\" | \"avatar\">): ThunkType =>\r\n    async dispatch => {\r\n        try {\r\n            dispatch(setOperationStatus(\"loading\"))\r\n            const response = await usersAPI.updateProfile(changes)\r\n            dispatch(modifyProfile(response.data.updatedUser))\r\n        }\r\n        catch (error){\r\n\r\n        }\r\n        finally {\r\n            dispatch(setOperationStatus(\"completed\"))\r\n        }\r\n    }\r\n\r\nexport const logout = (): ThunkType => async dispatch => {\r\n    try {\r\n        await usersAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n    } catch (e: any) {\r\n        dispatch(setErrorMessage(e))\r\n    }\r\n}\r\n\r\n","import {useDispatch} from \"react-redux\";\r\nimport {Dispatch} from \"react\";\r\nimport {ThunkType} from \"../../store/store\";\r\n\r\nexport const useTypedDispatch = () => {\r\n    return useDispatch<Dispatch<ThunkType>>()\r\n\r\n}","import style from \"./profileInfo.module.scss\"\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport React, {memo, useCallback} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectProfileData} from \"../../../../store/selectors\";\r\nimport {logout} from \"../../../../store/reducers/profileReducer\";\r\nimport {useTypedDispatch} from \"../../../utils\";\r\n\r\n\r\ntype ProfileInfoType = {\r\n    changeProfileEditingStatus: (status: boolean) => void\r\n}\r\n\r\nexport const ProfileInfo = memo(({\r\n                                     changeProfileEditingStatus,\r\n                                 }: ProfileInfoType) => {\r\n    const dispatch = useTypedDispatch()\r\n    const profile = useSelector(selectProfileData)\r\n\r\n    const handleChangeProfileEditingStatus = useCallback(() => {\r\n        changeProfileEditingStatus(true)\r\n    }, [changeProfileEditingStatus])\r\n\r\n    const handleLogoutClick = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.info_block}>\r\n                <div className={style.inner_info_top}>\r\n                    <img alt={\"avatar\"} src={profile.avatar} className={style.ava}/>\r\n                    <div className={style.name}>{profile.name}</div>\r\n                    <SuperButton\r\n                        onClick={handleChangeProfileEditingStatus}\r\n                    >\r\n                        Edit Profile\r\n                    </SuperButton>\r\n                </div>\r\n                <div className={style.inner_info_bottom}>\r\n                    <div className={style.logout_button}>\r\n                        <SuperButton\r\n                        onClick={handleLogoutClick}\r\n                    >\r\n                        Logout\r\n                    </SuperButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, memo} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = memo ((\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput: s.superInput} ${className? className: s.input}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default SuperInputText\r\n","import styles from './preloader.module.css';\r\ntype PreloaderType = {\r\n    width?:string\r\n    height?:string\r\n}\r\n\r\nexport const Preloader = ({width,height}:PreloaderType) => (\r\n    <div className={styles.container}>\r\n        <div style={{width:width,height:height}} className={styles.loader} />\r\n    </div>\r\n);\r\n\r\n","import React, {memo, useCallback, useState} from \"react\";\r\nimport style from \"./personalInformation.module.scss\"\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectOperationStatus, selectProfileData} from \"../../../../store/selectors\";\r\nimport {updateProfile} from \"../../../../store/reducers/profileReducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {useTypedDispatch} from \"../../../utils\";\r\n\r\ntype PersonalInformationType = {\r\n    changeProfileEditingStatus: (status: boolean) => void\r\n\r\n}\r\nexport const PersonalInformation = memo(({\r\n                                             changeProfileEditingStatus,\r\n                                         }: PersonalInformationType) => {\r\n\r\n    const dispatch = useTypedDispatch()\r\n    const profile = useSelector(selectProfileData)\r\n    const operationStatus = useSelector(selectOperationStatus)\r\n\r\n    const [nickname, setNickname] = useState<string>(profile.name)\r\n    const [avatar, setAvatar] = useState<string | undefined>(profile.avatar)\r\n\r\n    const handlerOnclickCancel = useCallback(() => {\r\n        changeProfileEditingStatus(false)\r\n    }, [changeProfileEditingStatus])\r\n\r\n    const handlerOnclickSave = useCallback(() => {\r\n        dispatch(updateProfile({name: nickname, avatar}))\r\n    }, [dispatch, nickname, avatar])\r\n\r\n    const disableButton = nickname === profile.name && avatar === profile.avatar\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.title}>Personal information</div>\r\n            <img alt={\"avatar\"} src={profile.avatar} className={style.ava}/>\r\n            <div className={style.input_container}>\r\n                <span>Nickname:</span>\r\n                <SuperInputText\r\n                    value={nickname}\r\n                    onChangeText={setNickname}\r\n                />\r\n                <span>URL avatar:</span>\r\n                <SuperInputText\r\n                    value={avatar}\r\n                    onChangeText={setAvatar}\r\n                />\r\n            </div>\r\n            <div className={style.button_container}>\r\n                <SuperButton\r\n                    onClick={handlerOnclickCancel}\r\n                >\r\n                    Cancel\r\n                </SuperButton>\r\n                <SuperButton\r\n                    disabled={disableButton}\r\n                    onClick={handlerOnclickSave}\r\n                > {operationStatus === \"loading\"\r\n                    ? <Preloader width={\"6px\"} height={\"6px\"}/>\r\n                    : \"Save\"\r\n                }\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useState} from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {PersonalInformation} from \"./PersonalInformation/PersonalInformation\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const [profileEditingStatus, setProfileEditingStatus] = useState<boolean>(false)\r\n\r\n    return (\r\n\r\n        !profileEditingStatus\r\n            ? <ProfileInfo\r\n                changeProfileEditingStatus={setProfileEditingStatus}\r\n            />\r\n            : <PersonalInformation\r\n                changeProfileEditingStatus={setProfileEditingStatus}\r\n            />\r\n    )\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { usersAPI } from \"../../main/api/api\";\r\nimport {setUserData} from \"../actions/profileReducerActions\";\r\nimport {setIsLoggedIn} from \"../actions/appReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\n\r\ntype InitStateType = typeof initState;\r\ntype AllActionsType = ReturnType<typeof getLoginAC>\r\n\r\nconst initState = {\r\n    email: '',\r\n    name: '',\r\n};\r\n\r\nexport const loginReducer = (state = initState, action: AllActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"GET_LOGIN\":\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                name: action.name\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getLoginAC = (email: string, name: string) => {\r\n    return {\r\n        type: \"GET_LOGIN\",\r\n        email,\r\n        name,\r\n    } as const\r\n}\r\n\r\nexport const getLoginUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    usersAPI.logIn(email, password, rememberMe)\r\n        .then(data => {\r\n            dispatch(getLoginAC(data.email, data.name))\r\n\r\n            dispatch(setUserData(data))\r\n            dispatch(setIsLoggedIn(true))\r\n        })\r\n}\r\n\r\nexport const forgotPassword = (email: string): ThunkType => async dispatch => {\r\n    try {\r\n        await usersAPI.forgotPassword(email)\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\nexport const sendNewPassword = (password: string,token:string): ThunkType => async dispatch => {\r\n    try {\r\n        await usersAPI.newPassword(password,token)\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n","import React, {useCallback, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./resetPassword.module.scss\"\r\nimport {useTypedDispatch} from \"../../utils\";\r\nimport {forgotPassword} from \"../../../store/reducers/loginReducer\";\r\n\r\n\r\nexport const ResetPassword = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useTypedDispatch()\r\n\r\n    const handleButtonClick = useCallback(() => {\r\n        dispatch(forgotPassword(email))\r\n    },[dispatch,email])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <SuperInputText\r\n                value={email}\r\n                placeholder={\"email\"}\r\n                onChangeText={setEmail}\r\n            />\r\n            <SuperButton\r\n                disabled={email === ''}\r\n                onClick={handleButtonClick}\r\n            >\r\n                Send instructions\r\n            </SuperButton>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useCallback, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./createNewPassword.module.scss\"\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useTypedDispatch} from \"../../utils\";\r\nimport {sendNewPassword} from \"../../../store/reducers/loginReducer\";\r\n\r\nexport const CreateNewPassword = () => {\r\n\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const dispatch = useTypedDispatch()\r\n    const {token} = useParams<\"token\">()\r\n\r\n    const handleSendNewPassword = useCallback(() => {\r\n        dispatch(sendNewPassword(newPassword, token!))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            Create new password\r\n            <div className={style.container}>\r\n                <SuperInputText\r\n                    placeholder={'new password'}\r\n                    value={newPassword}\r\n                    onChangeText={setNewPassword}\r\n                />\r\n                <SuperButton\r\n                    onClick={handleSendNewPassword}\r\n                >\r\n                    Create new password\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n           <span>\n               {children && <span className={s.spanClassName}>{children}</span>}\n           </span>\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from \"react\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nexport const SuperComponents = () => {\r\n    return (\r\n        <div>\r\n            <SuperButton>Button </SuperButton>\r\n            <br/>\r\n            <SuperInputText/>\r\n            <br/>\r\n            <SuperCheckbox/>\r\n            <br/>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {getLoginUserData} from \"../../../store/reducers/loginReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Path} from \"../Routes/Router\";\r\n\r\nexport const LogIn = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const onClickButtonLogin = () => {\r\n        dispatch(getLoginUserData(email, password, checked))\r\n        setEmail('')\r\n        setPassword('')\r\n        setChecked(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Sign in\r\n            </div>\r\n            <div>\r\n                Email\r\n            </div>\r\n            <div>\r\n                <input value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                Password\r\n            </div>\r\n            <div>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <input type=\"checkbox\" checked={checked} onChange={() => setChecked(!checked)}/>\r\n                <span>Remember me</span>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={onClickButtonLogin}>Login</button>\r\n            </div>\r\n            <NavLink\r\n                style={{\r\n                textDecoration: \"none\",\r\n                color: \"#d39191\"}}\r\n                to={Path.ResetPassword}\r\n            >\r\n                Forgot password?\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { Error404 } from \"../Error404/Error404\";\r\nimport { Registration } from \"../Registration/Registration\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { ResetPassword } from \"../ResetPassword/ResetPassword\";\r\nimport { CreateNewPassword } from \"../CreateNewPassword/CreateNewPassword\";\r\nimport { SuperComponents } from \"../SuperComponents/SuperComponents\";\r\nimport { LogIn } from \"../LogIn/LogIn\";\r\n\r\nexport enum Path {\r\n    LogIn = \"/login\",\r\n    Registration = \"/registration\",\r\n    ResetPassword = \"/resetPassword\",\r\n    CreatePassword = \"/createNewPassword/:token/*\",\r\n\r\n}\r\n\r\nexport const RouterWithoutLogin = () => {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={\"/\"} element={<LogIn />} />\r\n                <Route path={Path.LogIn} element={ <LogIn />} />\r\n                <Route path={Path.Registration} element={<Registration />} />\r\n                <Route path={Path.ResetPassword} element={<ResetPassword />} />\r\n                <Route path={Path.CreatePassword} element={<CreateNewPassword />}\r\n                />\r\n            </Routes>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Header.module.css\";\r\nimport {Path} from \"../Routes/Router\";\r\n\r\ntype NavbarItemType = {\r\n    path: string\r\n    name: string\r\n}\r\nconst navbarItems: NavbarItemType[] = [\r\n    {name: \"Login\", path: Path.LogIn},\r\n    {name: \"Registration\", path: Path.Registration},\r\n    {name: \"Profile\", path: Path.Profile},\r\n    {name: \"404\", path: Path.Error404},\r\n    {name: \"Reset password\", path: Path.ResetPassword},\r\n    {name: \"Create  password\", path: Path.CreatePassword},\r\n    {name: \"SuperComponents\", path: Path.SuperComponents},\r\n]\r\n\r\nconst NavbarItem = ({path, name}: NavbarItemType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <NavLink to={path} className={(navData) => navData.isActive ? style.active : ''}>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.nav}>\r\n            {navbarItems.map((nav,index) => <NavbarItem key={`${nav.name}+${index}` } name={nav.name} path={nav.path}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import {APP_ACTIONS, AppReducerActionsType, setInitialization, setIsLoggedIn} from \"../actions/appReducerActions\";\r\nimport {ThunkType} from \"../store\";\r\nimport {setUserData} from \"../actions/profileReducerActions\";\r\nimport {usersAPI} from \"../../main/api/api\";\r\n\r\nexport type PendingStatusType = 'idle' | 'failed' | 'completed' | 'loading';\r\ntype InitStateTypes = {\r\n    isLoggedIn: boolean\r\n    isInitialized: boolean\r\n    errorMessage: string | null\r\n    status: PendingStatusType\r\n};\r\nconst initState: InitStateTypes = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    errorMessage: null,\r\n    status: 'idle',\r\n};\r\n\r\nexport const appReducer = (state: InitStateTypes = initState, action: AppReducerActionsType): InitStateTypes => {\r\n\r\n    switch (action.type) {\r\n        case APP_ACTIONS.SET_INITIALIZATION:\r\n        case APP_ACTIONS.CHANGE_OPERATION_STATUS:\r\n        case APP_ACTIONS.SET_IS_LOGGED_IN:\r\n        case APP_ACTIONS.SET_ERROR_MESSAGE:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializeApp = (): ThunkType => async dispatch => {\r\n    try {\r\n        const response = await usersAPI.me()\r\n        dispatch(setUserData(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (e: any) {\r\n        dispatch(setIsLoggedIn(false))\r\n    }finally {\r\n        dispatch(setInitialization(true))\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./Header/Header\";\r\nimport {Router} from \"./Routes/Router\";\r\nimport {initializeApp} from \"../../store/reducers/appReducer\";\r\nimport {selectIsInit, selectIsLoggedIn} from \"../../store/selectors\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {LogIn} from \"./LogIn/LogIn\";\r\nimport {useTypedDispatch} from \"../utils\";\r\nimport {RouterWithoutLogin} from \"./Routes/RouterWithoutLogin\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useTypedDispatch()\r\n    const isLoggedIn = useSelector(selectIsLoggedIn)\r\n    const isInitialized = useSelector(selectIsInit)\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) return <Preloader width={\"40px\"} height={\"40px\"}/>\r\n\r\n    return (\r\n        <HashRouter>\r\n            {isLoggedIn ?\r\n            <div className=\"App\">\r\n                    <Header/>\r\n                    <Router/>\r\n            </div>\r\n            : <RouterWithoutLogin/>\r\n            }\r\n        </HashRouter>\r\n    );\r\n};\r\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const registrationReducer = (state = initState,action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {loginReducer} from \"./reducers/loginReducer\";\r\nimport {registrationReducer} from \"./reducers/registrationReducer\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport {ProfileReducersActionsType} from \"./actions/profileReducerActions\";\r\nimport {appReducer} from \"./reducers/appReducer\";\r\nimport {AppReducerActionsType} from \"./actions/appReducerActions\";\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducers>;\r\n\r\nexport type AllActionsType =\r\n  | ProfileReducersActionsType\r\n  | AppReducerActionsType\r\n\r\n\r\nexport type ThunkType = ThunkAction<void, AppStoreType, unknown, AllActionsType>\r\n\r\nconst rootReducers = combineReducers({\r\n  app:appReducer,\r\n  logIn: loginReducer,\r\n  registration: registrationReducer,\r\n  profile: profileReducer,\r\n});\r\nexport const store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {App} from \"./main/ui/App\";\r\nimport {store} from \"./store/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}